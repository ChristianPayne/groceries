import type { NotificationProps, NotificationsContextProps } from './types';
declare type ValueOf<T> = T[keyof T];
export declare const NOTIFICATIONS_EVENTS: {
    readonly show: "mantine:show-notification";
    readonly hide: "mantine:hide-notification";
    readonly update: "mantine:update-notification";
    readonly clean: "mantine:clean-notifications";
    readonly cleanQueue: "mantine:clean-notifications-queue";
};
export declare function createEvent(type: ValueOf<typeof NOTIFICATIONS_EVENTS>, detail?: any): CustomEvent<any>;
export declare function showNotification(notification: NotificationProps): void;
export declare function updateNotification(notification: NotificationProps & {
    id: string;
}): void;
export declare function hideNotification(id: string): void;
export declare function cleanNotifications(): void;
export declare function cleanNotificationsQueue(): void;
export declare function useNotificationsEvents(ctx: NotificationsContextProps): void;
export {};
//# sourceMappingURL=events.d.ts.map