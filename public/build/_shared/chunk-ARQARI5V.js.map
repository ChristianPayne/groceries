{
  "version": 3,
  "sources": ["../../../node_modules/@remix-run/react/esm/browser.js", "../../../node_modules/history/index.js", "../../../node_modules/@remix-run/react/esm/components.js", "../../../node_modules/@remix-run/react/esm/_virtual/_rollupPluginBabelHelpers.js", "../../../../packages/react-router/lib/context.ts", "../../../../packages/react-router/lib/router.ts", "../../../../packages/react-router/lib/hooks.tsx", "../../../../packages/react-router/lib/components.tsx", "../../../../packages/react-router-dom/index.tsx", "../../../node_modules/@remix-run/react/esm/errorBoundaries.js", "../../../node_modules/@remix-run/react/esm/invariant.js", "../../../node_modules/@remix-run/react/esm/links.js", "../../../node_modules/@remix-run/react/esm/routeModules.js", "../../../node_modules/@remix-run/react/esm/markup.js", "../../../node_modules/@remix-run/react/esm/routes.js", "../../../node_modules/@remix-run/react/esm/data.js", "../../../node_modules/@remix-run/react/esm/transition.js", "../../../node_modules/@remix-run/react/esm/routeMatching.js", "../../../node_modules/@remix-run/react/esm/index.js", "../../../node_modules/@remix-run/react/esm/scroll-restoration.js"],
  "sourcesContent": ["/**\n * @remix-run/react v1.5.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport { createBrowserHistory } from 'history';\nimport * as React from 'react';\nimport { RemixEntry } from './components.js';\n\n// TODO: We eventually might not want to import anything directly from `history`\n\n/**\n * The entry point for a Remix app when it is rendered in the browser (in\n * `app/entry.client.js`). This component is used by React to hydrate the HTML\n * that was received from the server.\n */\nfunction RemixBrowser(_props) {\n  let historyRef = React.useRef();\n\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({\n      window\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, dispatch] = React.useReducer((_, update) => update, {\n    action: history.action,\n    location: history.location\n  });\n  React.useLayoutEffect(() => history.listen(dispatch), [history]);\n  let entryContext = window.__remixContext;\n  entryContext.manifest = window.__remixManifest;\n  entryContext.routeModules = window.__remixRouteModules; // In the browser, we don't need this because a) in the case of loader\n  // errors we already know the order and b) in the case of render errors\n  // React knows the order and handles error boundaries normally.\n\n  entryContext.appState.trackBoundaries = false;\n  entryContext.appState.trackCatchBoundaries = false;\n  return /*#__PURE__*/React.createElement(RemixEntry, {\n    context: entryContext,\n    action: state.action,\n    location: state.location,\n    navigator: history\n  });\n}\n\nexport { RemixBrowser };\n", "import _extends from '@babel/runtime/helpers/esm/extends';\n\n/**\r\n * Actions represent the type of change to a location value.\r\n *\r\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#action\r\n */\nvar Action;\n\n(function (Action) {\n  /**\r\n   * A POP indicates a change to an arbitrary index in the history stack, such\r\n   * as a back or forward navigation. It does not describe the direction of the\r\n   * navigation, only that the current index changed.\r\n   *\r\n   * Note: This is the default action for newly created history objects.\r\n   */\n  Action[\"Pop\"] = \"POP\";\n  /**\r\n   * A PUSH indicates a new entry being added to the history stack, such as when\r\n   * a link is clicked and a new page loads. When this happens, all subsequent\r\n   * entries in the stack are lost.\r\n   */\n\n  Action[\"Push\"] = \"PUSH\";\n  /**\r\n   * A REPLACE indicates the entry at the current index in the history stack\r\n   * being replaced by a new one.\r\n   */\n\n  Action[\"Replace\"] = \"REPLACE\";\n})(Action || (Action = {}));\n\nvar readOnly = process.env.NODE_ENV !== \"production\" ? function (obj) {\n  return Object.freeze(obj);\n} : function (obj) {\n  return obj;\n};\n\nfunction warning(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== 'undefined') console.warn(message);\n\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message); // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\nvar BeforeUnloadEventType = 'beforeunload';\nvar HashChangeEventType = 'hashchange';\nvar PopStateEventType = 'popstate';\n/**\r\n * Browser history stores the location in regular URLs. This is the standard for\r\n * most web apps, but it requires some configuration on the server to ensure you\r\n * serve the same app at multiple URLs.\r\n *\r\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\r\n */\n\nfunction createBrowserHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      _options$window = _options.window,\n      window = _options$window === void 0 ? document.defaultView : _options$window;\n  var globalHistory = window.history;\n\n  function getIndexAndLocation() {\n    var _window$location = window.location,\n        pathname = _window$location.pathname,\n        search = _window$location.search,\n        hash = _window$location.hash;\n    var state = globalHistory.state || {};\n    return [state.idx, readOnly({\n      pathname: pathname,\n      search: search,\n      hash: hash,\n      state: state.usr || null,\n      key: state.key || 'default'\n    })];\n  }\n\n  var blockedPopTx = null;\n\n  function handlePop() {\n    if (blockedPopTx) {\n      blockers.call(blockedPopTx);\n      blockedPopTx = null;\n    } else {\n      var nextAction = Action.Pop;\n\n      var _getIndexAndLocation = getIndexAndLocation(),\n          nextIndex = _getIndexAndLocation[0],\n          nextLocation = _getIndexAndLocation[1];\n\n      if (blockers.length) {\n        if (nextIndex != null) {\n          var delta = index - nextIndex;\n\n          if (delta) {\n            // Revert the POP\n            blockedPopTx = {\n              action: nextAction,\n              location: nextLocation,\n              retry: function retry() {\n                go(delta * -1);\n              }\n            };\n            go(delta);\n          }\n        } else {\n          // Trying to POP to a location with no index. We did not create\n          // this location, so we can't effectively block the navigation.\n          process.env.NODE_ENV !== \"production\" ? warning(false, // TODO: Write up a doc that explains our blocking strategy in\n          // detail and link to it here so people can understand better what\n          // is going on and how to avoid it.\n          \"You are trying to block a POP navigation to a location that was not \" + \"created by the history library. The block will fail silently in \" + \"production, but in general you should do all navigation with the \" + \"history library (instead of using window.history.pushState directly) \" + \"to avoid this situation.\") : void 0;\n        }\n      } else {\n        applyTx(nextAction);\n      }\n    }\n  }\n\n  window.addEventListener(PopStateEventType, handlePop);\n  var action = Action.Pop;\n\n  var _getIndexAndLocation2 = getIndexAndLocation(),\n      index = _getIndexAndLocation2[0],\n      location = _getIndexAndLocation2[1];\n\n  var listeners = createEvents();\n  var blockers = createEvents();\n\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState(_extends({}, globalHistory.state, {\n      idx: index\n    }), '');\n  }\n\n  function createHref(to) {\n    return typeof to === 'string' ? to : createPath(to);\n  } // state defaults to `null` because `window.history.state` does\n\n\n  function getNextLocation(to, state) {\n    if (state === void 0) {\n      state = null;\n    }\n\n    return readOnly(_extends({\n      pathname: location.pathname,\n      hash: '',\n      search: ''\n    }, typeof to === 'string' ? parsePath(to) : to, {\n      state: state,\n      key: createKey()\n    }));\n  }\n\n  function getHistoryStateAndUrl(nextLocation, index) {\n    return [{\n      usr: nextLocation.state,\n      key: nextLocation.key,\n      idx: index\n    }, createHref(nextLocation)];\n  }\n\n  function allowTx(action, location, retry) {\n    return !blockers.length || (blockers.call({\n      action: action,\n      location: location,\n      retry: retry\n    }), false);\n  }\n\n  function applyTx(nextAction) {\n    action = nextAction;\n\n    var _getIndexAndLocation3 = getIndexAndLocation();\n\n    index = _getIndexAndLocation3[0];\n    location = _getIndexAndLocation3[1];\n    listeners.call({\n      action: action,\n      location: location\n    });\n  }\n\n  function push(to, state) {\n    var nextAction = Action.Push;\n    var nextLocation = getNextLocation(to, state);\n\n    function retry() {\n      push(to, state);\n    }\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      var _getHistoryStateAndUr = getHistoryStateAndUrl(nextLocation, index + 1),\n          historyState = _getHistoryStateAndUr[0],\n          url = _getHistoryStateAndUr[1]; // TODO: Support forced reloading\n      // try...catch because iOS limits us to 100 pushState calls :/\n\n\n      try {\n        globalHistory.pushState(historyState, '', url);\n      } catch (error) {\n        // They are going to lose state here, but there is no real\n        // way to warn them about it since the page will refresh...\n        window.location.assign(url);\n      }\n\n      applyTx(nextAction);\n    }\n  }\n\n  function replace(to, state) {\n    var nextAction = Action.Replace;\n    var nextLocation = getNextLocation(to, state);\n\n    function retry() {\n      replace(to, state);\n    }\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      var _getHistoryStateAndUr2 = getHistoryStateAndUrl(nextLocation, index),\n          historyState = _getHistoryStateAndUr2[0],\n          url = _getHistoryStateAndUr2[1]; // TODO: Support forced reloading\n\n\n      globalHistory.replaceState(historyState, '', url);\n      applyTx(nextAction);\n    }\n  }\n\n  function go(delta) {\n    globalHistory.go(delta);\n  }\n\n  var history = {\n    get action() {\n      return action;\n    },\n\n    get location() {\n      return location;\n    },\n\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    back: function back() {\n      go(-1);\n    },\n    forward: function forward() {\n      go(1);\n    },\n    listen: function listen(listener) {\n      return listeners.push(listener);\n    },\n    block: function block(blocker) {\n      var unblock = blockers.push(blocker);\n\n      if (blockers.length === 1) {\n        window.addEventListener(BeforeUnloadEventType, promptBeforeUnload);\n      }\n\n      return function () {\n        unblock(); // Remove the beforeunload listener so the document may\n        // still be salvageable in the pagehide event.\n        // See https://html.spec.whatwg.org/#unloading-documents\n\n        if (!blockers.length) {\n          window.removeEventListener(BeforeUnloadEventType, promptBeforeUnload);\n        }\n      };\n    }\n  };\n  return history;\n}\n/**\r\n * Hash history stores the location in window.location.hash. This makes it ideal\r\n * for situations where you don't want to send the location to the server for\r\n * some reason, either because you do cannot configure it or the URL space is\r\n * reserved for something else.\r\n *\r\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\r\n */\n\nfunction createHashHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options2 = options,\n      _options2$window = _options2.window,\n      window = _options2$window === void 0 ? document.defaultView : _options2$window;\n  var globalHistory = window.history;\n\n  function getIndexAndLocation() {\n    var _parsePath = parsePath(window.location.hash.substr(1)),\n        _parsePath$pathname = _parsePath.pathname,\n        pathname = _parsePath$pathname === void 0 ? '/' : _parsePath$pathname,\n        _parsePath$search = _parsePath.search,\n        search = _parsePath$search === void 0 ? '' : _parsePath$search,\n        _parsePath$hash = _parsePath.hash,\n        hash = _parsePath$hash === void 0 ? '' : _parsePath$hash;\n\n    var state = globalHistory.state || {};\n    return [state.idx, readOnly({\n      pathname: pathname,\n      search: search,\n      hash: hash,\n      state: state.usr || null,\n      key: state.key || 'default'\n    })];\n  }\n\n  var blockedPopTx = null;\n\n  function handlePop() {\n    if (blockedPopTx) {\n      blockers.call(blockedPopTx);\n      blockedPopTx = null;\n    } else {\n      var nextAction = Action.Pop;\n\n      var _getIndexAndLocation4 = getIndexAndLocation(),\n          nextIndex = _getIndexAndLocation4[0],\n          nextLocation = _getIndexAndLocation4[1];\n\n      if (blockers.length) {\n        if (nextIndex != null) {\n          var delta = index - nextIndex;\n\n          if (delta) {\n            // Revert the POP\n            blockedPopTx = {\n              action: nextAction,\n              location: nextLocation,\n              retry: function retry() {\n                go(delta * -1);\n              }\n            };\n            go(delta);\n          }\n        } else {\n          // Trying to POP to a location with no index. We did not create\n          // this location, so we can't effectively block the navigation.\n          process.env.NODE_ENV !== \"production\" ? warning(false, // TODO: Write up a doc that explains our blocking strategy in\n          // detail and link to it here so people can understand better\n          // what is going on and how to avoid it.\n          \"You are trying to block a POP navigation to a location that was not \" + \"created by the history library. The block will fail silently in \" + \"production, but in general you should do all navigation with the \" + \"history library (instead of using window.history.pushState directly) \" + \"to avoid this situation.\") : void 0;\n        }\n      } else {\n        applyTx(nextAction);\n      }\n    }\n  }\n\n  window.addEventListener(PopStateEventType, handlePop); // popstate does not fire on hashchange in IE 11 and old (trident) Edge\n  // https://developer.mozilla.org/de/docs/Web/API/Window/popstate_event\n\n  window.addEventListener(HashChangeEventType, function () {\n    var _getIndexAndLocation5 = getIndexAndLocation(),\n        nextLocation = _getIndexAndLocation5[1]; // Ignore extraneous hashchange events.\n\n\n    if (createPath(nextLocation) !== createPath(location)) {\n      handlePop();\n    }\n  });\n  var action = Action.Pop;\n\n  var _getIndexAndLocation6 = getIndexAndLocation(),\n      index = _getIndexAndLocation6[0],\n      location = _getIndexAndLocation6[1];\n\n  var listeners = createEvents();\n  var blockers = createEvents();\n\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState(_extends({}, globalHistory.state, {\n      idx: index\n    }), '');\n  }\n\n  function getBaseHref() {\n    var base = document.querySelector('base');\n    var href = '';\n\n    if (base && base.getAttribute('href')) {\n      var url = window.location.href;\n      var hashIndex = url.indexOf('#');\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n\n    return href;\n  }\n\n  function createHref(to) {\n    return getBaseHref() + '#' + (typeof to === 'string' ? to : createPath(to));\n  }\n\n  function getNextLocation(to, state) {\n    if (state === void 0) {\n      state = null;\n    }\n\n    return readOnly(_extends({\n      pathname: location.pathname,\n      hash: '',\n      search: ''\n    }, typeof to === 'string' ? parsePath(to) : to, {\n      state: state,\n      key: createKey()\n    }));\n  }\n\n  function getHistoryStateAndUrl(nextLocation, index) {\n    return [{\n      usr: nextLocation.state,\n      key: nextLocation.key,\n      idx: index\n    }, createHref(nextLocation)];\n  }\n\n  function allowTx(action, location, retry) {\n    return !blockers.length || (blockers.call({\n      action: action,\n      location: location,\n      retry: retry\n    }), false);\n  }\n\n  function applyTx(nextAction) {\n    action = nextAction;\n\n    var _getIndexAndLocation7 = getIndexAndLocation();\n\n    index = _getIndexAndLocation7[0];\n    location = _getIndexAndLocation7[1];\n    listeners.call({\n      action: action,\n      location: location\n    });\n  }\n\n  function push(to, state) {\n    var nextAction = Action.Push;\n    var nextLocation = getNextLocation(to, state);\n\n    function retry() {\n      push(to, state);\n    }\n\n    process.env.NODE_ENV !== \"production\" ? warning(nextLocation.pathname.charAt(0) === '/', \"Relative pathnames are not supported in hash history.push(\" + JSON.stringify(to) + \")\") : void 0;\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      var _getHistoryStateAndUr3 = getHistoryStateAndUrl(nextLocation, index + 1),\n          historyState = _getHistoryStateAndUr3[0],\n          url = _getHistoryStateAndUr3[1]; // TODO: Support forced reloading\n      // try...catch because iOS limits us to 100 pushState calls :/\n\n\n      try {\n        globalHistory.pushState(historyState, '', url);\n      } catch (error) {\n        // They are going to lose state here, but there is no real\n        // way to warn them about it since the page will refresh...\n        window.location.assign(url);\n      }\n\n      applyTx(nextAction);\n    }\n  }\n\n  function replace(to, state) {\n    var nextAction = Action.Replace;\n    var nextLocation = getNextLocation(to, state);\n\n    function retry() {\n      replace(to, state);\n    }\n\n    process.env.NODE_ENV !== \"production\" ? warning(nextLocation.pathname.charAt(0) === '/', \"Relative pathnames are not supported in hash history.replace(\" + JSON.stringify(to) + \")\") : void 0;\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      var _getHistoryStateAndUr4 = getHistoryStateAndUrl(nextLocation, index),\n          historyState = _getHistoryStateAndUr4[0],\n          url = _getHistoryStateAndUr4[1]; // TODO: Support forced reloading\n\n\n      globalHistory.replaceState(historyState, '', url);\n      applyTx(nextAction);\n    }\n  }\n\n  function go(delta) {\n    globalHistory.go(delta);\n  }\n\n  var history = {\n    get action() {\n      return action;\n    },\n\n    get location() {\n      return location;\n    },\n\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    back: function back() {\n      go(-1);\n    },\n    forward: function forward() {\n      go(1);\n    },\n    listen: function listen(listener) {\n      return listeners.push(listener);\n    },\n    block: function block(blocker) {\n      var unblock = blockers.push(blocker);\n\n      if (blockers.length === 1) {\n        window.addEventListener(BeforeUnloadEventType, promptBeforeUnload);\n      }\n\n      return function () {\n        unblock(); // Remove the beforeunload listener so the document may\n        // still be salvageable in the pagehide event.\n        // See https://html.spec.whatwg.org/#unloading-documents\n\n        if (!blockers.length) {\n          window.removeEventListener(BeforeUnloadEventType, promptBeforeUnload);\n        }\n      };\n    }\n  };\n  return history;\n}\n/**\r\n * Memory history stores the current location in memory. It is designed for use\r\n * in stateful non-browser environments like tests and React Native.\r\n *\r\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#creatememoryhistory\r\n */\n\nfunction createMemoryHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options3 = options,\n      _options3$initialEntr = _options3.initialEntries,\n      initialEntries = _options3$initialEntr === void 0 ? ['/'] : _options3$initialEntr,\n      initialIndex = _options3.initialIndex;\n  var entries = initialEntries.map(function (entry) {\n    var location = readOnly(_extends({\n      pathname: '/',\n      search: '',\n      hash: '',\n      state: null,\n      key: createKey()\n    }, typeof entry === 'string' ? parsePath(entry) : entry));\n    process.env.NODE_ENV !== \"production\" ? warning(location.pathname.charAt(0) === '/', \"Relative pathnames are not supported in createMemoryHistory({ initialEntries }) (invalid entry: \" + JSON.stringify(entry) + \")\") : void 0;\n    return location;\n  });\n  var index = clamp(initialIndex == null ? entries.length - 1 : initialIndex, 0, entries.length - 1);\n  var action = Action.Pop;\n  var location = entries[index];\n  var listeners = createEvents();\n  var blockers = createEvents();\n\n  function createHref(to) {\n    return typeof to === 'string' ? to : createPath(to);\n  }\n\n  function getNextLocation(to, state) {\n    if (state === void 0) {\n      state = null;\n    }\n\n    return readOnly(_extends({\n      pathname: location.pathname,\n      search: '',\n      hash: ''\n    }, typeof to === 'string' ? parsePath(to) : to, {\n      state: state,\n      key: createKey()\n    }));\n  }\n\n  function allowTx(action, location, retry) {\n    return !blockers.length || (blockers.call({\n      action: action,\n      location: location,\n      retry: retry\n    }), false);\n  }\n\n  function applyTx(nextAction, nextLocation) {\n    action = nextAction;\n    location = nextLocation;\n    listeners.call({\n      action: action,\n      location: location\n    });\n  }\n\n  function push(to, state) {\n    var nextAction = Action.Push;\n    var nextLocation = getNextLocation(to, state);\n\n    function retry() {\n      push(to, state);\n    }\n\n    process.env.NODE_ENV !== \"production\" ? warning(location.pathname.charAt(0) === '/', \"Relative pathnames are not supported in memory history.push(\" + JSON.stringify(to) + \")\") : void 0;\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      applyTx(nextAction, nextLocation);\n    }\n  }\n\n  function replace(to, state) {\n    var nextAction = Action.Replace;\n    var nextLocation = getNextLocation(to, state);\n\n    function retry() {\n      replace(to, state);\n    }\n\n    process.env.NODE_ENV !== \"production\" ? warning(location.pathname.charAt(0) === '/', \"Relative pathnames are not supported in memory history.replace(\" + JSON.stringify(to) + \")\") : void 0;\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      entries[index] = nextLocation;\n      applyTx(nextAction, nextLocation);\n    }\n  }\n\n  function go(delta) {\n    var nextIndex = clamp(index + delta, 0, entries.length - 1);\n    var nextAction = Action.Pop;\n    var nextLocation = entries[nextIndex];\n\n    function retry() {\n      go(delta);\n    }\n\n    if (allowTx(nextAction, nextLocation, retry)) {\n      index = nextIndex;\n      applyTx(nextAction, nextLocation);\n    }\n  }\n\n  var history = {\n    get index() {\n      return index;\n    },\n\n    get action() {\n      return action;\n    },\n\n    get location() {\n      return location;\n    },\n\n    createHref: createHref,\n    push: push,\n    replace: replace,\n    go: go,\n    back: function back() {\n      go(-1);\n    },\n    forward: function forward() {\n      go(1);\n    },\n    listen: function listen(listener) {\n      return listeners.push(listener);\n    },\n    block: function block(blocker) {\n      return blockers.push(blocker);\n    }\n  };\n  return history;\n} ////////////////////////////////////////////////////////////////////////////////\n// UTILS\n////////////////////////////////////////////////////////////////////////////////\n\nfunction clamp(n, lowerBound, upperBound) {\n  return Math.min(Math.max(n, lowerBound), upperBound);\n}\n\nfunction promptBeforeUnload(event) {\n  // Cancel the event.\n  event.preventDefault(); // Chrome (and legacy IE) requires returnValue to be set.\n\n  event.returnValue = '';\n}\n\nfunction createEvents() {\n  var handlers = [];\n  return {\n    get length() {\n      return handlers.length;\n    },\n\n    push: function push(fn) {\n      handlers.push(fn);\n      return function () {\n        handlers = handlers.filter(function (handler) {\n          return handler !== fn;\n        });\n      };\n    },\n    call: function call(arg) {\n      handlers.forEach(function (fn) {\n        return fn && fn(arg);\n      });\n    }\n  };\n}\n\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n/**\r\n * Creates a string URL path from the given pathname, search, and hash components.\r\n *\r\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createpath\r\n */\n\n\nfunction createPath(_ref) {\n  var _ref$pathname = _ref.pathname,\n      pathname = _ref$pathname === void 0 ? '/' : _ref$pathname,\n      _ref$search = _ref.search,\n      search = _ref$search === void 0 ? '' : _ref$search,\n      _ref$hash = _ref.hash,\n      hash = _ref$hash === void 0 ? '' : _ref$hash;\n  if (search && search !== '?') pathname += search.charAt(0) === '?' ? search : '?' + search;\n  if (hash && hash !== '#') pathname += hash.charAt(0) === '#' ? hash : '#' + hash;\n  return pathname;\n}\n/**\r\n * Parses a string URL path into its separate pathname, search, and hash components.\r\n *\r\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#parsepath\r\n */\n\nfunction parsePath(path) {\n  var parsedPath = {};\n\n  if (path) {\n    var hashIndex = path.indexOf('#');\n\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n\n    var searchIndex = path.indexOf('?');\n\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n\n  return parsedPath;\n}\n\nexport { Action, createBrowserHistory, createHashHistory, createMemoryHistory, createPath, parsePath };\n//# sourceMappingURL=index.js.map\n", "/**\n * @remix-run/react v1.5.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport { extends as _extends } from './_virtual/_rollupPluginBabelHelpers.js';\nimport * as React from 'react';\nimport { useHref, NavLink as NavLink$1, Link as Link$1, useLocation, useResolvedPath, useNavigate, Router, useRoutes } from 'react-router-dom';\nimport { RemixErrorBoundary, RemixRootDefaultErrorBoundary, RemixCatchBoundary, RemixRootDefaultCatchBoundary } from './errorBoundaries.js';\nimport invariant from './invariant.js';\nimport { getLinksForMatches, isPageLinkDescriptor, getNewMatchesForLinks, getDataLinkHrefs, getModuleLinkHrefs, getStylesheetPrefetchLinks } from './links.js';\nimport { createHtml } from './markup.js';\nimport { createClientRoutes } from './routes.js';\nimport { matchClientRoutes } from './routeMatching.js';\nimport { createTransitionManager } from './transition.js';\n\nconst RemixEntryContext = /*#__PURE__*/React.createContext(undefined);\n\nfunction useRemixEntryContext() {\n  let context = React.useContext(RemixEntryContext);\n  invariant(context, \"You must render this element inside a <Remix> element\");\n  return context;\n}\n\nfunction RemixEntry({\n  context: entryContext,\n  action,\n  location: historyLocation,\n  navigator: _navigator,\n  static: staticProp = false\n}) {\n  let {\n    manifest,\n    routeData: documentLoaderData,\n    actionData: documentActionData,\n    routeModules,\n    serverHandoffString,\n    appState: entryComponentDidCatchEmulator\n  } = entryContext;\n  let clientRoutes = React.useMemo(() => createClientRoutes(manifest.routes, routeModules, RemixRoute), [manifest, routeModules]);\n  let [clientState, setClientState] = React.useState(entryComponentDidCatchEmulator);\n  let [transitionManager] = React.useState(() => {\n    return createTransitionManager({\n      routes: clientRoutes,\n      actionData: documentActionData,\n      loaderData: documentLoaderData,\n      location: historyLocation,\n      catch: entryComponentDidCatchEmulator.catch,\n      catchBoundaryId: entryComponentDidCatchEmulator.catchBoundaryRouteId,\n      onRedirect: _navigator.replace,\n      onChange: state => {\n        setClientState({\n          catch: state.catch,\n          error: state.error,\n          catchBoundaryRouteId: state.catchBoundaryId,\n          loaderBoundaryRouteId: state.errorBoundaryId,\n          renderBoundaryRouteId: null,\n          trackBoundaries: false,\n          trackCatchBoundaries: false\n        });\n      }\n    });\n  }); // Ensures pushes interrupting pending navigations use replace\n  // TODO: Move this to React Router\n\n  let navigator = React.useMemo(() => {\n    let push = (to, state) => {\n      return transitionManager.getState().transition.state !== \"idle\" ? _navigator.replace(to, state) : _navigator.push(to, state);\n    };\n\n    return { ..._navigator,\n      push\n    };\n  }, [_navigator, transitionManager]);\n  let {\n    location,\n    matches,\n    loaderData,\n    actionData\n  } = transitionManager.getState(); // Send new location to the transition manager\n\n  React.useEffect(() => {\n    let {\n      location\n    } = transitionManager.getState();\n    if (historyLocation === location) return;\n    transitionManager.send({\n      type: \"navigation\",\n      location: historyLocation,\n      submission: consumeNextNavigationSubmission(),\n      action\n    });\n  }, [transitionManager, historyLocation, action]); // If we tried to render and failed, and the app threw before rendering any\n  // routes, get the error and pass it to the ErrorBoundary to emulate\n  // `componentDidCatch`\n\n  let ssrErrorBeforeRoutesRendered = clientState.error && clientState.renderBoundaryRouteId === null && clientState.loaderBoundaryRouteId === null ? deserializeError(clientState.error) : undefined;\n  let ssrCatchBeforeRoutesRendered = clientState.catch && clientState.catchBoundaryRouteId === null ? clientState.catch : undefined;\n  return /*#__PURE__*/React.createElement(RemixEntryContext.Provider, {\n    value: {\n      matches,\n      manifest,\n      appState: clientState,\n      routeModules,\n      serverHandoffString,\n      clientRoutes,\n      routeData: loaderData,\n      actionData,\n      transitionManager\n    }\n  }, /*#__PURE__*/React.createElement(RemixErrorBoundary, {\n    location: location,\n    component: RemixRootDefaultErrorBoundary,\n    error: ssrErrorBeforeRoutesRendered\n  }, /*#__PURE__*/React.createElement(RemixCatchBoundary, {\n    location: location,\n    component: RemixRootDefaultCatchBoundary,\n    catch: ssrCatchBeforeRoutesRendered\n  }, /*#__PURE__*/React.createElement(Router, {\n    navigationType: action,\n    location: location,\n    navigator: navigator,\n    static: staticProp\n  }, /*#__PURE__*/React.createElement(Routes, null)))));\n}\n\nfunction deserializeError(data) {\n  let error = new Error(data.message);\n  error.stack = data.stack;\n  return error;\n}\n\nfunction Routes() {\n  // TODO: Add `renderMatches` function to RR that we can use and then we don't\n  // need this component, we can just `renderMatches` from RemixEntry\n  let {\n    clientRoutes\n  } = useRemixEntryContext(); // fallback to the root if we don't have a match\n\n  let element = useRoutes(clientRoutes) || clientRoutes[0].element;\n  return element;\n} ////////////////////////////////////////////////////////////////////////////////\n// RemixRoute\n\n\nconst RemixRouteContext = /*#__PURE__*/React.createContext(undefined);\n\nfunction useRemixRouteContext() {\n  let context = React.useContext(RemixRouteContext);\n  invariant(context, \"You must render this element in a remix route element\");\n  return context;\n}\n\nfunction DefaultRouteComponent({\n  id\n}) {\n  throw new Error(`Route \"${id}\" has no component! Please go add a \\`default\\` export in the route module file.\\n` + \"If you were trying to navigate or submit to a resource route, use `<a>` instead of `<Link>` or `<Form reloadDocument>`.\");\n}\n\nfunction RemixRoute({\n  id\n}) {\n  let location = useLocation();\n  let {\n    routeData,\n    routeModules,\n    appState\n  } = useRemixEntryContext(); // This checks prevent cryptic error messages such as: 'Cannot read properties of undefined (reading 'root')'\n\n  invariant(routeData, \"Cannot initialize 'routeData'. This normally occurs when you have server code in your client modules.\\n\" + \"Check this link for more details:\\nhttps://remix.run/pages/gotchas#server-code-in-client-bundles\");\n  invariant(routeModules, \"Cannot initialize 'routeModules'. This normally occurs when you have server code in your client modules.\\n\" + \"Check this link for more details:\\nhttps://remix.run/pages/gotchas#server-code-in-client-bundles\");\n  let data = routeData[id];\n  let {\n    default: Component,\n    CatchBoundary,\n    ErrorBoundary\n  } = routeModules[id];\n  let element = Component ? /*#__PURE__*/React.createElement(Component, null) : /*#__PURE__*/React.createElement(DefaultRouteComponent, {\n    id: id\n  });\n  let context = {\n    data,\n    id\n  };\n\n  if (CatchBoundary) {\n    // If we tried to render and failed, and this route threw the error, find it\n    // and pass it to the ErrorBoundary to emulate `componentDidCatch`\n    let maybeServerCaught = appState.catch && appState.catchBoundaryRouteId === id ? appState.catch : undefined; // This needs to run after we check for the error from a previous render,\n    // otherwise we will incorrectly render this boundary for a loader error\n    // deeper in the tree.\n\n    if (appState.trackCatchBoundaries) {\n      appState.catchBoundaryRouteId = id;\n    }\n\n    context = maybeServerCaught ? {\n      id,\n\n      get data() {\n        console.error(\"You cannot `useLoaderData` in a catch boundary.\");\n        return undefined;\n      }\n\n    } : {\n      id,\n      data\n    };\n    element = /*#__PURE__*/React.createElement(RemixCatchBoundary, {\n      location: location,\n      component: CatchBoundary,\n      catch: maybeServerCaught\n    }, element);\n  } // Only wrap in error boundary if the route defined one, otherwise let the\n  // error bubble to the parent boundary. We could default to using error\n  // boundaries around every route, but now if the app doesn't want users\n  // seeing the default Remix ErrorBoundary component, they *must* define an\n  // error boundary for *every* route and that would be annoying. Might as\n  // well make it required at that point.\n  //\n  // By conditionally wrapping like this, we allow apps to define a top level\n  // ErrorBoundary component and be done with it. Then, if they want to, they\n  // can add more specific boundaries by exporting ErrorBoundary components\n  // for whichever routes they please.\n  //\n  // NOTE: this kind of logic will move into React Router\n\n\n  if (ErrorBoundary) {\n    // If we tried to render and failed, and this route threw the error, find it\n    // and pass it to the ErrorBoundary to emulate `componentDidCatch`\n    let maybeServerRenderError = appState.error && (appState.renderBoundaryRouteId === id || appState.loaderBoundaryRouteId === id) ? deserializeError(appState.error) : undefined; // This needs to run after we check for the error from a previous render,\n    // otherwise we will incorrectly render this boundary for a loader error\n    // deeper in the tree.\n\n    if (appState.trackBoundaries) {\n      appState.renderBoundaryRouteId = id;\n    }\n\n    context = maybeServerRenderError ? {\n      id,\n\n      get data() {\n        console.error(\"You cannot `useLoaderData` in an error boundary.\");\n        return undefined;\n      }\n\n    } : {\n      id,\n      data\n    };\n    element = /*#__PURE__*/React.createElement(RemixErrorBoundary, {\n      location: location,\n      component: ErrorBoundary,\n      error: maybeServerRenderError\n    }, element);\n  } // It's important for the route context to be above the error boundary so that\n  // a call to `useLoaderData` doesn't accidentally get the parents route's data.\n\n\n  return /*#__PURE__*/React.createElement(RemixRouteContext.Provider, {\n    value: context\n  }, element);\n} ////////////////////////////////////////////////////////////////////////////////\n// Public API\n\n/**\n * Defines the prefetching behavior of the link:\n *\n * - \"intent\": Fetched when the user focuses or hovers the link\n * - \"render\": Fetched when the link is rendered\n * - \"none\": Never fetched\n */\n\nfunction usePrefetchBehavior(prefetch, theirElementProps) {\n  let [maybePrefetch, setMaybePrefetch] = React.useState(false);\n  let [shouldPrefetch, setShouldPrefetch] = React.useState(false);\n  let {\n    onFocus,\n    onBlur,\n    onMouseEnter,\n    onMouseLeave,\n    onTouchStart\n  } = theirElementProps;\n  React.useEffect(() => {\n    if (prefetch === \"render\") {\n      setShouldPrefetch(true);\n    }\n  }, [prefetch]);\n\n  let setIntent = () => {\n    if (prefetch === \"intent\") {\n      setMaybePrefetch(true);\n    }\n  };\n\n  let cancelIntent = () => {\n    if (prefetch === \"intent\") {\n      setMaybePrefetch(false);\n      setShouldPrefetch(false);\n    }\n  };\n\n  React.useEffect(() => {\n    if (maybePrefetch) {\n      let id = setTimeout(() => {\n        setShouldPrefetch(true);\n      }, 100);\n      return () => {\n        clearTimeout(id);\n      };\n    }\n  }, [maybePrefetch]);\n  return [shouldPrefetch, {\n    onFocus: composeEventHandlers(onFocus, setIntent),\n    onBlur: composeEventHandlers(onBlur, cancelIntent),\n    onMouseEnter: composeEventHandlers(onMouseEnter, setIntent),\n    onMouseLeave: composeEventHandlers(onMouseLeave, cancelIntent),\n    onTouchStart: composeEventHandlers(onTouchStart, setIntent)\n  }];\n}\n/**\n * A special kind of `<Link>` that knows whether or not it is \"active\".\n *\n * @see https://remix.run/api/remix#navlink\n */\n\n\nlet NavLink = /*#__PURE__*/React.forwardRef(({\n  to,\n  prefetch = \"none\",\n  ...props\n}, forwardedRef) => {\n  let href = useHref(to);\n  let [shouldPrefetch, prefetchHandlers] = usePrefetchBehavior(prefetch, props);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(NavLink$1, _extends({\n    ref: forwardedRef,\n    to: to\n  }, props, prefetchHandlers)), shouldPrefetch ? /*#__PURE__*/React.createElement(PrefetchPageLinks, {\n    page: href\n  }) : null);\n});\nNavLink.displayName = \"NavLink\";\n/**\n * This component renders an anchor tag and is the primary way the user will\n * navigate around your website.\n *\n * @see https://remix.run/api/remix#link\n */\n\nlet Link = /*#__PURE__*/React.forwardRef(({\n  to,\n  prefetch = \"none\",\n  ...props\n}, forwardedRef) => {\n  let href = useHref(to);\n  let [shouldPrefetch, prefetchHandlers] = usePrefetchBehavior(prefetch, props);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Link$1, _extends({\n    ref: forwardedRef,\n    to: to\n  }, props, prefetchHandlers)), shouldPrefetch ? /*#__PURE__*/React.createElement(PrefetchPageLinks, {\n    page: href\n  }) : null);\n});\nLink.displayName = \"Link\";\nfunction composeEventHandlers(theirHandler, ourHandler) {\n  return event => {\n    theirHandler && theirHandler(event);\n\n    if (!event.defaultPrevented) {\n      ourHandler(event);\n    }\n  };\n}\n/**\n * Renders the `<link>` tags for the current routes.\n *\n * @see https://remix.run/api/remix#meta-links-scripts\n */\n\nfunction Links() {\n  let {\n    matches,\n    routeModules,\n    manifest\n  } = useRemixEntryContext();\n  let links = React.useMemo(() => getLinksForMatches(matches, routeModules, manifest), [matches, routeModules, manifest]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, links.map(link => isPageLinkDescriptor(link) ? /*#__PURE__*/React.createElement(PrefetchPageLinks, _extends({\n    key: link.page\n  }, link)) : /*#__PURE__*/React.createElement(\"link\", _extends({\n    key: link.rel + link.href\n  }, link))));\n}\n/**\n * This component renders all of the `<link rel=\"prefetch\">` and\n * `<link rel=\"modulepreload\"/>` tags for all the assets (data, modules, css) of\n * a given page.\n *\n * @param props\n * @param props.page\n * @see https://remix.run/api/remix#prefetchpagelinks-\n */\n\nfunction PrefetchPageLinks({\n  page,\n  ...dataLinkProps\n}) {\n  let {\n    clientRoutes\n  } = useRemixEntryContext();\n  let matches = React.useMemo(() => matchClientRoutes(clientRoutes, page), [clientRoutes, page]);\n\n  if (!matches) {\n    console.warn(`Tried to prefetch ${page} but no routes matched.`);\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(PrefetchPageLinksImpl, _extends({\n    page: page,\n    matches: matches\n  }, dataLinkProps));\n}\n\nfunction usePrefetchedStylesheets(matches) {\n  let {\n    routeModules\n  } = useRemixEntryContext();\n  let [styleLinks, setStyleLinks] = React.useState([]);\n  React.useEffect(() => {\n    let interrupted = false;\n    getStylesheetPrefetchLinks(matches, routeModules).then(links => {\n      if (!interrupted) setStyleLinks(links);\n    });\n    return () => {\n      interrupted = true;\n    };\n  }, [matches, routeModules]);\n  return styleLinks;\n}\n\nfunction PrefetchPageLinksImpl({\n  page,\n  matches: nextMatches,\n  ...linkProps\n}) {\n  let location = useLocation();\n  let {\n    matches,\n    manifest\n  } = useRemixEntryContext();\n  let newMatchesForData = React.useMemo(() => getNewMatchesForLinks(page, nextMatches, matches, location, \"data\"), [page, nextMatches, matches, location]);\n  let newMatchesForAssets = React.useMemo(() => getNewMatchesForLinks(page, nextMatches, matches, location, \"assets\"), [page, nextMatches, matches, location]);\n  let dataHrefs = React.useMemo(() => getDataLinkHrefs(page, newMatchesForData, manifest), [newMatchesForData, page, manifest]);\n  let moduleHrefs = React.useMemo(() => getModuleLinkHrefs(newMatchesForAssets, manifest), [newMatchesForAssets, manifest]); // needs to be a hook with async behavior because we need the modules, not\n  // just the manifest like the other links in here.\n\n  let styleLinks = usePrefetchedStylesheets(newMatchesForAssets);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, dataHrefs.map(href => /*#__PURE__*/React.createElement(\"link\", _extends({\n    key: href,\n    rel: \"prefetch\",\n    as: \"fetch\",\n    href: href\n  }, linkProps))), moduleHrefs.map(href => /*#__PURE__*/React.createElement(\"link\", _extends({\n    key: href,\n    rel: \"modulepreload\",\n    href: href\n  }, linkProps))), styleLinks.map(link =>\n  /*#__PURE__*/\n  // these don't spread `linkProps` because they are full link descriptors\n  // already with their own props\n  React.createElement(\"link\", _extends({\n    key: link.href\n  }, link))));\n}\n/**\n * Renders the `<title>` and `<meta>` tags for the current routes.\n *\n * @see https://remix.run/api/remix#meta-links-scripts\n */\n\n\nfunction Meta() {\n  let {\n    matches,\n    routeData,\n    routeModules\n  } = useRemixEntryContext();\n  let location = useLocation();\n  let meta = {};\n  let parentsData = {};\n\n  for (let match of matches) {\n    let routeId = match.route.id;\n    let data = routeData[routeId];\n    let params = match.params;\n    let routeModule = routeModules[routeId];\n\n    if (routeModule.meta) {\n      let routeMeta = typeof routeModule.meta === \"function\" ? routeModule.meta({\n        data,\n        parentsData,\n        params,\n        location\n      }) : routeModule.meta;\n      Object.assign(meta, routeMeta);\n    }\n\n    parentsData[routeId] = data;\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, Object.entries(meta).map(([name, value]) => {\n    if (!value) {\n      return null;\n    }\n\n    if ([\"charset\", \"charSet\"].includes(name)) {\n      return /*#__PURE__*/React.createElement(\"meta\", {\n        key: \"charset\",\n        charSet: value\n      });\n    }\n\n    if (name === \"title\") {\n      return /*#__PURE__*/React.createElement(\"title\", {\n        key: \"title\"\n      }, value);\n    } // Open Graph tags use the `property` attribute, while other meta tags\n    // use `name`. See https://ogp.me/\n\n\n    let isOpenGraphTag = name.startsWith(\"og:\");\n    return [value].flat().map(content => {\n      if (isOpenGraphTag) {\n        return /*#__PURE__*/React.createElement(\"meta\", {\n          content: content,\n          key: name + content,\n          property: name\n        });\n      }\n\n      if (typeof content === \"string\") {\n        return /*#__PURE__*/React.createElement(\"meta\", {\n          content: content,\n          name: name,\n          key: name + content\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(\"meta\", _extends({\n        key: name + JSON.stringify(content)\n      }, content));\n    });\n  }));\n}\n/**\n * Tracks whether Remix has finished hydrating or not, so scripts can be skipped\n * during client-side updates.\n */\n\nlet isHydrated = false;\n\n/**\n * Renders the `<script>` tags needed for the initial render. Bundles for\n * additional routes are loaded later as needed.\n *\n * @param props Additional properties to add to each script tag that is rendered.\n * In addition to scripts, \\<link rel=\"modulepreload\"> tags receive the crossOrigin\n * property if provided.\n *\n * @see https://remix.run/api/remix#meta-links-scripts\n */\nfunction Scripts(props) {\n  let {\n    manifest,\n    matches,\n    pendingLocation,\n    clientRoutes,\n    serverHandoffString\n  } = useRemixEntryContext();\n  React.useEffect(() => {\n    isHydrated = true;\n  }, []);\n  let initialScripts = React.useMemo(() => {\n    let contextScript = serverHandoffString ? `window.__remixContext = ${serverHandoffString};` : \"\";\n    let routeModulesScript = `${matches.map((match, index) => `import * as route${index} from ${JSON.stringify(manifest.routes[match.route.id].module)};`).join(\"\\n\")}\nwindow.__remixRouteModules = {${matches.map((match, index) => `${JSON.stringify(match.route.id)}:route${index}`).join(\",\")}};`;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"script\", _extends({}, props, {\n      suppressHydrationWarning: true,\n      dangerouslySetInnerHTML: createHtml(contextScript)\n    })), /*#__PURE__*/React.createElement(\"script\", _extends({}, props, {\n      src: manifest.url\n    })), /*#__PURE__*/React.createElement(\"script\", _extends({}, props, {\n      dangerouslySetInnerHTML: createHtml(routeModulesScript),\n      type: \"module\"\n    })), /*#__PURE__*/React.createElement(\"script\", _extends({}, props, {\n      src: manifest.entry.module,\n      type: \"module\"\n    }))); // disabled deps array because we are purposefully only rendering this once\n    // for hydration, after that we want to just continue rendering the initial\n    // scripts as they were when the page first loaded\n    // eslint-disable-next-line\n  }, []); // avoid waterfall when importing the next route module\n\n  let nextMatches = React.useMemo(() => {\n    if (pendingLocation) {\n      // FIXME: can probably use transitionManager `nextMatches`\n      let matches = matchClientRoutes(clientRoutes, pendingLocation);\n      invariant(matches, `No routes match path \"${pendingLocation.pathname}\"`);\n      return matches;\n    }\n\n    return [];\n  }, [pendingLocation, clientRoutes]);\n  let routePreloads = matches.concat(nextMatches).map(match => {\n    let route = manifest.routes[match.route.id];\n    return (route.imports || []).concat([route.module]);\n  }).flat(1);\n  let preloads = manifest.entry.imports.concat(routePreloads);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, dedupe(preloads).map(path => /*#__PURE__*/React.createElement(\"link\", {\n    key: path,\n    rel: \"modulepreload\",\n    href: path,\n    crossOrigin: props.crossOrigin\n  })), isHydrated ? null : initialScripts);\n}\n\nfunction dedupe(array) {\n  return [...new Set(array)];\n}\n\n/**\n * A Remix-aware `<form>`. It behaves like a normal form except that the\n * interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n *\n * @see https://remix.run/api/remix#form\n */\nlet Form = /*#__PURE__*/React.forwardRef((props, ref) => {\n  return /*#__PURE__*/React.createElement(FormImpl, _extends({}, props, {\n    ref: ref\n  }));\n});\nForm.displayName = \"Form\";\nlet FormImpl = /*#__PURE__*/React.forwardRef(({\n  reloadDocument = false,\n  replace = false,\n  method = \"get\",\n  action = \".\",\n  encType = \"application/x-www-form-urlencoded\",\n  fetchKey,\n  onSubmit,\n  ...props\n}, forwardedRef) => {\n  let submit = useSubmitImpl(fetchKey);\n  let formMethod = method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n  let formAction = useFormAction(action);\n  return /*#__PURE__*/React.createElement(\"form\", _extends({\n    ref: forwardedRef,\n    method: formMethod,\n    action: formAction,\n    encType: encType,\n    onSubmit: reloadDocument ? undefined : event => {\n      onSubmit && onSubmit(event);\n      if (event.defaultPrevented) return;\n      event.preventDefault();\n      let submitter = event.nativeEvent.submitter;\n      submit(submitter || event.currentTarget, {\n        method,\n        replace\n      });\n    }\n  }, props));\n});\nFormImpl.displayName = \"FormImpl\";\n\n/**\n * Resolves a `<form action>` path relative to the current route.\n *\n * @see https://remix.run/api/remix#useformaction\n */\nfunction useFormAction(action = \".\", // TODO: Remove method param in v2 as it's no longer needed and is a breaking change\nmethod = \"get\") {\n  let {\n    id\n  } = useRemixRouteContext();\n  let path = useResolvedPath(action);\n  let search = path.search;\n  let isIndexRoute = id.endsWith(\"/index\");\n\n  if (action === \".\" && isIndexRoute) {\n    search = search ? search.replace(/^\\?/, \"?index&\") : \"?index\";\n  }\n\n  return path.pathname + search;\n}\n\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n *\n * @see https://remix.run/api/remix#usesubmit\n */\nfunction useSubmit() {\n  return useSubmitImpl();\n}\nlet defaultMethod = \"get\";\nlet defaultEncType = \"application/x-www-form-urlencoded\";\nfunction useSubmitImpl(key) {\n  let navigate = useNavigate();\n  let defaultAction = useFormAction();\n  let {\n    transitionManager\n  } = useRemixEntryContext();\n  return React.useCallback((target, options = {}) => {\n    let method;\n    let action;\n    let encType;\n    let formData;\n\n    if (isFormElement(target)) {\n      let submissionTrigger = options.submissionTrigger;\n      method = options.method || target.getAttribute(\"method\") || defaultMethod;\n      action = options.action || target.getAttribute(\"action\") || defaultAction;\n      encType = options.encType || target.getAttribute(\"enctype\") || defaultEncType;\n      formData = new FormData(target);\n\n      if (submissionTrigger && submissionTrigger.name) {\n        formData.append(submissionTrigger.name, submissionTrigger.value);\n      }\n    } else if (isButtonElement(target) || isInputElement(target) && (target.type === \"submit\" || target.type === \"image\")) {\n      let form = target.form;\n\n      if (form == null) {\n        throw new Error(`Cannot submit a <button> without a <form>`);\n      } // <button>/<input type=\"submit\"> may override attributes of <form>\n\n\n      method = options.method || target.getAttribute(\"formmethod\") || form.getAttribute(\"method\") || defaultMethod;\n      action = options.action || target.getAttribute(\"formaction\") || form.getAttribute(\"action\") || defaultAction;\n      encType = options.encType || target.getAttribute(\"formenctype\") || form.getAttribute(\"enctype\") || defaultEncType;\n      formData = new FormData(form); // Include name + value from a <button>\n\n      if (target.name) {\n        formData.set(target.name, target.value);\n      }\n    } else {\n      if (isHtmlElement(target)) {\n        throw new Error(`Cannot submit element that is not <form>, <button>, or ` + `<input type=\"submit|image\">`);\n      }\n\n      method = options.method || \"get\";\n      action = options.action || defaultAction;\n      encType = options.encType || \"application/x-www-form-urlencoded\";\n\n      if (target instanceof FormData) {\n        formData = target;\n      } else {\n        formData = new FormData();\n\n        if (target instanceof URLSearchParams) {\n          for (let [name, value] of target) {\n            formData.append(name, value);\n          }\n        } else if (target != null) {\n          for (let name of Object.keys(target)) {\n            formData.append(name, target[name]);\n          }\n        }\n      }\n    }\n\n    if (typeof document === \"undefined\") {\n      throw new Error(\"You are calling submit during the server render. \" + \"Try calling submit within a `useEffect` or callback instead.\");\n    }\n\n    let {\n      protocol,\n      host\n    } = window.location;\n    let url = new URL(action, `${protocol}//${host}`);\n\n    if (method.toLowerCase() === \"get\") {\n      for (let [name, value] of formData) {\n        if (typeof value === \"string\") {\n          url.searchParams.append(name, value);\n        } else {\n          throw new Error(`Cannot submit binary form data using GET`);\n        }\n      }\n    }\n\n    let submission = {\n      formData,\n      action: url.pathname + url.search,\n      method: method.toUpperCase(),\n      encType,\n      key: Math.random().toString(36).substr(2, 8)\n    };\n\n    if (key) {\n      transitionManager.send({\n        type: \"fetcher\",\n        href: submission.action,\n        submission,\n        key\n      });\n    } else {\n      setNextNavigationSubmission(submission);\n      navigate(url.pathname + url.search, {\n        replace: options.replace\n      });\n    }\n  }, [defaultAction, key, navigate, transitionManager]);\n}\nlet nextNavigationSubmission;\n\nfunction setNextNavigationSubmission(submission) {\n  nextNavigationSubmission = submission;\n}\n\nfunction consumeNextNavigationSubmission() {\n  let submission = nextNavigationSubmission;\n  nextNavigationSubmission = undefined;\n  return submission;\n}\n\nfunction isHtmlElement(object) {\n  return object != null && typeof object.tagName === \"string\";\n}\n\nfunction isButtonElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\n\nfunction isFormElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\n\nfunction isInputElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes, which automatically happens on the next `<Link>` click when Remix\n * detects a new version of the app is available on the server.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n *\n * @see https://remix.run/api/remix#usebeforeunload\n */\n\n\nfunction useBeforeUnload(callback) {\n  React.useEffect(() => {\n    window.addEventListener(\"beforeunload\", callback);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback);\n    };\n  }, [callback]);\n}\n/**\n * Returns the current route matches on the page. This is useful for creating\n * layout abstractions with your current routes.\n *\n * @see https://remix.run/api/remix#usematches\n */\n\nfunction useMatches() {\n  let {\n    matches,\n    routeData,\n    routeModules\n  } = useRemixEntryContext();\n  return React.useMemo(() => matches.map(match => {\n    var _routeModules$match$r;\n\n    let {\n      pathname,\n      params\n    } = match;\n    return {\n      id: match.route.id,\n      pathname,\n      params,\n      data: routeData[match.route.id],\n      // if the module fails to load or an error/response is thrown, the module\n      // won't be defined.\n      handle: (_routeModules$match$r = routeModules[match.route.id]) === null || _routeModules$match$r === void 0 ? void 0 : _routeModules$match$r.handle\n    };\n  }), [matches, routeData, routeModules]);\n}\n/**\n * Returns the JSON parsed data from the current route's `loader`.\n *\n * @see https://remix.run/api/remix#useloaderdata\n */\n\nfunction useLoaderData() {\n  return useRemixRouteContext().data;\n}\n/**\n * Returns the JSON parsed data from the current route's `action`.\n *\n * @see https://remix.run/api/remix#useactiondata\n */\n\nfunction useActionData() {\n  let {\n    id: routeId\n  } = useRemixRouteContext();\n  let {\n    transitionManager\n  } = useRemixEntryContext();\n  let {\n    actionData\n  } = transitionManager.getState();\n  return actionData ? actionData[routeId] : undefined;\n}\n/**\n * Returns everything you need to know about a page transition to build pending\n * navigation indicators and optimistic UI on data mutations.\n *\n * @see https://remix.run/api/remix#usetransition\n */\n\nfunction useTransition() {\n  let {\n    transitionManager\n  } = useRemixEntryContext();\n  return transitionManager.getState().transition;\n}\n\nfunction createFetcherForm(fetchKey) {\n  let FetcherForm = /*#__PURE__*/React.forwardRef((props, ref) => {\n    // TODO: make ANOTHER form w/o a fetchKey prop\n    return /*#__PURE__*/React.createElement(FormImpl, _extends({}, props, {\n      ref: ref,\n      fetchKey: fetchKey\n    }));\n  });\n  FetcherForm.displayName = \"fetcher.Form\";\n  return FetcherForm;\n}\n\nlet fetcherId = 0;\n\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n *\n * @see https://remix.run/api/remix#usefetcher\n */\nfunction useFetcher() {\n  let {\n    transitionManager\n  } = useRemixEntryContext();\n  let [key] = React.useState(() => String(++fetcherId));\n  let [Form] = React.useState(() => createFetcherForm(key));\n  let [load] = React.useState(() => href => {\n    transitionManager.send({\n      type: \"fetcher\",\n      href,\n      key\n    });\n  });\n  let submit = useSubmitImpl(key);\n  let fetcher = transitionManager.getFetcher(key);\n  let fetcherWithComponents = React.useMemo(() => ({\n    Form,\n    submit,\n    load,\n    ...fetcher\n  }), [fetcher, Form, submit, load]);\n  React.useEffect(() => {\n    // Is this busted when the React team gets real weird and calls effects\n    // twice on mount?  We really just need to garbage collect here when this\n    // fetcher is no longer around.\n    return () => transitionManager.deleteFetcher(key);\n  }, [transitionManager, key]);\n  return fetcherWithComponents;\n}\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n *\n * @see https://remix.run/api/remix#usefetchers\n */\n\nfunction useFetchers() {\n  let {\n    transitionManager\n  } = useRemixEntryContext();\n  let {\n    fetchers\n  } = transitionManager.getState();\n  return [...fetchers.values()];\n} // Dead Code Elimination magic for production builds.\n// This way devs don't have to worry about doing the NODE_ENV check themselves.\n// If running an un-bundled server outside of `remix dev` you will still need\n// to set the REMIX_DEV_SERVER_WS_PORT manually.\n\nconst LiveReload = process.env.NODE_ENV !== \"development\" ? () => null : function LiveReload({\n  port = Number(process.env.REMIX_DEV_SERVER_WS_PORT || 8002),\n  nonce = undefined\n}) {\n  let js = String.raw;\n  return /*#__PURE__*/React.createElement(\"script\", {\n    nonce: nonce,\n    suppressHydrationWarning: true,\n    dangerouslySetInnerHTML: {\n      __html: js`\n                (() => {\n                  let protocol = location.protocol === \"https:\" ? \"wss:\" : \"ws:\";\n                  let host = location.hostname;\n                  let socketPath = protocol + \"//\" + host + \":\" + ${String(port)} + \"/socket\";\n\n                  let ws = new WebSocket(socketPath);\n                  ws.onmessage = (message) => {\n                    let event = JSON.parse(message.data);\n                    if (event.type === \"LOG\") {\n                      console.log(event.message);\n                    }\n                    if (event.type === \"RELOAD\") {\n                      console.log(\"\uD83D\uDCBF Reloading window ...\");\n                      window.location.reload();\n                    }\n                  };\n                  ws.onerror = (error) => {\n                    console.log(\"Remix dev asset server web socket error:\");\n                    console.error(error);\n                  };\n                })();\n              `\n    }\n  });\n};\n\nexport { Form, FormImpl, Link, Links, LiveReload, Meta, NavLink, PrefetchPageLinks, RemixEntry, RemixEntryContext, RemixRoute, Scripts, composeEventHandlers, useActionData, useBeforeUnload, useFetcher, useFetchers, useFormAction, useLoaderData, useMatches, useSubmit, useSubmitImpl, useTransition };\n", "/**\n * @remix-run/react v1.5.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nexport { _extends as extends };\n", "import * as React from \"react\";\nimport type { History, Location } from \"history\";\nimport { Action as NavigationType } from \"history\";\n\nimport type { RouteMatch } from \"./router\";\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level <Router> API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\nexport type Navigator = Pick<History, \"go\" | \"push\" | \"replace\" | \"createHref\">;\n\ninterface NavigationContextObject {\n  basename: string;\n  navigator: Navigator;\n  static: boolean;\n}\n\nexport const NavigationContext = React.createContext<NavigationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  NavigationContext.displayName = \"Navigation\";\n}\n\ninterface LocationContextObject {\n  location: Location;\n  navigationType: NavigationType;\n}\n\nexport const LocationContext = React.createContext<LocationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  LocationContext.displayName = \"Location\";\n}\n\ninterface RouteContextObject {\n  outlet: React.ReactElement | null;\n  matches: RouteMatch[];\n}\n\nexport const RouteContext = React.createContext<RouteContextObject>({\n  outlet: null,\n  matches: [],\n});\n\nif (__DEV__) {\n  RouteContext.displayName = \"Route\";\n}\n", "import type { Location, Path, To } from \"history\";\nimport { parsePath } from \"history\";\n\nexport function invariant(cond: any, message: string): asserts cond {\n  if (!cond) throw new Error(message);\n}\n\nexport function warning(cond: any, message: string): void {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging React Router!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\nconst alreadyWarned: Record<string, boolean> = {};\nexport function warningOnce(key: string, cond: boolean, message: string) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    warning(false, message);\n  }\n}\n\ntype ParamParseFailed = { failed: true };\n\ntype ParamParseSegment<Segment extends string> =\n  // Check here if there exists a forward slash in the string.\n  Segment extends `${infer LeftSegment}/${infer RightSegment}`\n    ? // If there is a forward slash, then attempt to parse each side of the\n      // forward slash.\n      ParamParseSegment<LeftSegment> extends infer LeftResult\n      ? ParamParseSegment<RightSegment> extends infer RightResult\n        ? LeftResult extends string\n          ? // If the left side is successfully parsed as a param, then check if\n            // the right side can be successfully parsed as well. If both sides\n            // can be parsed, then the result is a union of the two sides\n            // (read: \"foo\" | \"bar\").\n            RightResult extends string\n            ? LeftResult | RightResult\n            : LeftResult\n          : // If the left side is not successfully parsed as a param, then check\n          // if only the right side can be successfully parse as a param. If it\n          // can, then the result is just right, else it's a failure.\n          RightResult extends string\n          ? RightResult\n          : ParamParseFailed\n        : ParamParseFailed\n      : // If the left side didn't parse into a param, then just check the right\n      // side.\n      ParamParseSegment<RightSegment> extends infer RightResult\n      ? RightResult extends string\n        ? RightResult\n        : ParamParseFailed\n      : ParamParseFailed\n    : // If there's no forward slash, then check if this segment starts with a\n    // colon. If it does, then this is a dynamic segment, so the result is\n    // just the remainder of the string. Otherwise, it's a failure.\n    Segment extends `:${infer Remaining}`\n    ? Remaining\n    : ParamParseFailed;\n\n// Attempt to parse the given string segment. If it fails, then just return the\n// plain string type as a default fallback. Otherwise return the union of the\n// parsed string literals that were referenced as dynamic segments in the route.\nexport type ParamParseKey<Segment extends string> =\n  ParamParseSegment<Segment> extends string\n    ? ParamParseSegment<Segment>\n    : string;\n\n/**\n * The parameters that were parsed from the URL path.\n */\nexport type Params<Key extends string = string> = {\n  readonly [key in Key]: string | undefined;\n};\n\n/**\n * A route object represents a logical route, with (optionally) its child\n * routes organized in a tree-like structure.\n */\nexport interface RouteObject {\n  caseSensitive?: boolean;\n  children?: RouteObject[];\n  element?: React.ReactNode;\n  index?: boolean;\n  path?: string;\n}\n\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/docs/en/v6/api#generatepath\n */\nexport function generatePath(path: string, params: Params = {}): string {\n  return path\n    .replace(/:(\\w+)/g, (_, key) => {\n      invariant(params[key] != null, `Missing \":${key}\" param`);\n      return params[key]!;\n    })\n    .replace(/\\/*\\*$/, (_) =>\n      params[\"*\"] == null ? \"\" : params[\"*\"].replace(/^\\/*/, \"/\")\n    );\n}\n\n/**\n * A RouteMatch contains info about how a route matched a URL.\n */\nexport interface RouteMatch<ParamKey extends string = string> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The route object that was used to match.\n   */\n  route: RouteObject;\n}\n\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/docs/en/v6/api#matchroutes\n */\nexport function matchRoutes(\n  routes: RouteObject[],\n  locationArg: Partial<Location> | string,\n  basename = \"/\"\n): RouteMatch[] | null {\n  let location =\n    typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n\n  if (pathname == null) {\n    return null;\n  }\n\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    matches = matchRouteBranch(branches[i], pathname);\n  }\n\n  return matches;\n}\n\ninterface RouteMeta {\n  relativePath: string;\n  caseSensitive: boolean;\n  childrenIndex: number;\n  route: RouteObject;\n}\n\ninterface RouteBranch {\n  path: string;\n  score: number;\n  routesMeta: RouteMeta[];\n}\n\nfunction flattenRoutes(\n  routes: RouteObject[],\n  branches: RouteBranch[] = [],\n  parentsMeta: RouteMeta[] = [],\n  parentPath = \"\"\n): RouteBranch[] {\n  routes.forEach((route, index) => {\n    let meta: RouteMeta = {\n      relativePath: route.path || \"\",\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route,\n    };\n\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(\n        meta.relativePath.startsWith(parentPath),\n        `Absolute route path \"${meta.relativePath}\" nested under path ` +\n          `\"${parentPath}\" is not valid. An absolute child route path ` +\n          `must start with the combined path of all its parent routes.`\n      );\n\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n\n    // Add the children before adding this route to the array so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n    if (route.children && route.children.length > 0) {\n      invariant(\n        route.index !== true,\n        `Index routes must not have child routes. Please remove ` +\n          `all child routes from route path \"${path}\".`\n      );\n\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n\n    // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n    if (route.path == null && !route.index) {\n      return;\n    }\n\n    branches.push({ path, score: computeScore(path, route.index), routesMeta });\n  });\n\n  return branches;\n}\n\nfunction rankRouteBranches(branches: RouteBranch[]): void {\n  branches.sort((a, b) =>\n    a.score !== b.score\n      ? b.score - a.score // Higher score first\n      : compareIndexes(\n          a.routesMeta.map((meta) => meta.childrenIndex),\n          b.routesMeta.map((meta) => meta.childrenIndex)\n        )\n  );\n}\n\nconst paramRe = /^:\\w+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = (s: string) => s === \"*\";\n\nfunction computeScore(path: string, index: boolean | undefined): number {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n\n  return segments\n    .filter((s) => !isSplat(s))\n    .reduce(\n      (score, segment) =>\n        score +\n        (paramRe.test(segment)\n          ? dynamicSegmentValue\n          : segment === \"\"\n          ? emptySegmentValue\n          : staticSegmentValue),\n      initialScore\n    );\n}\n\nfunction compareIndexes(a: number[], b: number[]): number {\n  let siblings =\n    a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n\n  return siblings\n    ? // If two routes are siblings, we should try to match the earlier sibling\n      // first. This allows people to have fine-grained control over the matching\n      // behavior by simply putting routes with identical paths in the order they\n      // want them tried.\n      a[a.length - 1] - b[b.length - 1]\n    : // Otherwise, it doesn't really make sense to rank non-siblings by index,\n      // so they sort equally.\n      0;\n}\n\nfunction matchRouteBranch<ParamKey extends string = string>(\n  branch: RouteBranch,\n  pathname: string\n): RouteMatch<ParamKey>[] | null {\n  let { routesMeta } = branch;\n\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches: RouteMatch[] = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname =\n      matchedPathname === \"/\"\n        ? pathname\n        : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath(\n      { path: meta.relativePath, caseSensitive: meta.caseSensitive, end },\n      remainingPathname\n    );\n\n    if (!match) return null;\n\n    Object.assign(matchedParams, match.params);\n\n    let route = meta.route;\n\n    matches.push({\n      params: matchedParams,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(\n        joinPaths([matchedPathname, match.pathnameBase])\n      ),\n      route,\n    });\n\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n\n  return matches;\n}\n\n/**\n * A PathPattern is used to match on some portion of a URL pathname.\n */\nexport interface PathPattern<Path extends string = string> {\n  /**\n   * A string to match against a URL pathname. May contain `:id`-style segments\n   * to indicate placeholders for dynamic parameters. May also end with `/*` to\n   * indicate matching the rest of the URL pathname.\n   */\n  path: Path;\n  /**\n   * Should be `true` if the static portions of the `path` should be matched in\n   * the same case.\n   */\n  caseSensitive?: boolean;\n  /**\n   * Should be `true` if this pattern should match the entire URL pathname.\n   */\n  end?: boolean;\n}\n\n/**\n * A PathMatch contains info about how a PathPattern matched on a URL pathname.\n */\nexport interface PathMatch<ParamKey extends string = string> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The pattern that was used to match.\n   */\n  pattern: PathPattern;\n}\n\ntype Mutable<T> = {\n  -readonly [P in keyof T]: T[P];\n};\n\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/docs/en/v6/api#matchpath\n */\nexport function matchPath<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(\n  pattern: PathPattern<Path> | Path,\n  pathname: string\n): PathMatch<ParamKey> | null {\n  if (typeof pattern === \"string\") {\n    pattern = { path: pattern, caseSensitive: false, end: true };\n  }\n\n  let [matcher, paramNames] = compilePath(\n    pattern.path,\n    pattern.caseSensitive,\n    pattern.end\n  );\n\n  let match = pathname.match(matcher);\n  if (!match) return null;\n\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params: Params = paramNames.reduce<Mutable<Params>>(\n    (memo, paramName, index) => {\n      // We need to compute the pathnameBase here using the raw splat value\n      // instead of using params[\"*\"] later because it will be decoded then\n      if (paramName === \"*\") {\n        let splatValue = captureGroups[index] || \"\";\n        pathnameBase = matchedPathname\n          .slice(0, matchedPathname.length - splatValue.length)\n          .replace(/(.)\\/+$/, \"$1\");\n      }\n\n      memo[paramName] = safelyDecodeURIComponent(\n        captureGroups[index] || \"\",\n        paramName\n      );\n      return memo;\n    },\n    {}\n  );\n\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern,\n  };\n}\n\nfunction compilePath(\n  path: string,\n  caseSensitive = false,\n  end = true\n): [RegExp, string[]] {\n  warning(\n    path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"),\n    `Route path \"${path}\" will be treated as if it were ` +\n      `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n      `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n      `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n  );\n\n  let paramNames: string[] = [];\n  let regexpSource =\n    \"^\" +\n    path\n      .replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n      .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n      .replace(/[\\\\.*+^$?{}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n      .replace(/:(\\w+)/g, (_: string, paramName: string) => {\n        paramNames.push(paramName);\n        return \"([^\\\\/]+)\";\n      });\n\n  if (path.endsWith(\"*\")) {\n    paramNames.push(\"*\");\n    regexpSource +=\n      path === \"*\" || path === \"/*\"\n        ? \"(.*)$\" // Already matched the initial /, just match the rest\n        : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else {\n    regexpSource += end\n      ? \"\\\\/*$\" // When matching to the end, ignore trailing slashes\n      : // Otherwise, match a word boundary or a proceeding /. The word boundary restricts\n        // parent routes to matching only their own words and nothing more, e.g. parent\n        // route \"/home\" should not match \"/home2\".\n        // Additionally, allow paths starting with `.`, `-`, `~`, and url-encoded entities,\n        // but do not consume the character in the matched path so they can match against\n        // nested paths.\n        \"(?:(?=[.~-]|%[0-9A-F]{2})|\\\\b|\\\\/|$)\";\n  }\n\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n\n  return [matcher, paramNames];\n}\n\nfunction safelyDecodeURIComponent(value: string, paramName: string) {\n  try {\n    return decodeURIComponent(value);\n  } catch (error) {\n    warning(\n      false,\n      `The value for the URL param \"${paramName}\" will not be decoded because` +\n        ` the string \"${value}\" is a malformed URL segment. This is probably` +\n        ` due to a bad percent encoding (${error}).`\n    );\n\n    return value;\n  }\n}\n\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/docs/en/v6/api#resolvepath\n */\nexport function resolvePath(to: To, fromPathname = \"/\"): Path {\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\",\n  } = typeof to === \"string\" ? parsePath(to) : to;\n\n  let pathname = toPathname\n    ? toPathname.startsWith(\"/\")\n      ? toPathname\n      : resolvePathname(toPathname, fromPathname)\n    : fromPathname;\n\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash),\n  };\n}\n\nfunction resolvePathname(relativePath: string, fromPathname: string): string {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n\n  relativeSegments.forEach((segment) => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\n\nexport function resolveTo(\n  toArg: To,\n  routePathnames: string[],\n  locationPathname: string\n): Path {\n  let to = typeof toArg === \"string\" ? parsePath(toArg) : toArg;\n  let toPathname = toArg === \"\" || to.pathname === \"\" ? \"/\" : to.pathname;\n\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n  let from: string;\n  if (toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n\n    if (toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n\n      // Each leading .. segment means \"go up one route\" instead of \"go up one\n      // URL segment\".  This is a key difference from how <a href> works and a\n      // major reason we call this a \"to\" value instead of a \"href\".\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n\n      to.pathname = toSegments.join(\"/\");\n    }\n\n    // If there are more \"..\" segments than parent routes, resolve relative to\n    // the root / URL.\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n\n  let path = resolvePath(to, from);\n\n  // Ensure the pathname has a trailing slash if the original to value had one.\n  if (\n    toPathname &&\n    toPathname !== \"/\" &&\n    toPathname.endsWith(\"/\") &&\n    !path.pathname.endsWith(\"/\")\n  ) {\n    path.pathname += \"/\";\n  }\n\n  return path;\n}\n\nexport function getToPathname(to: To): string | undefined {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || (to as Path).pathname === \"\"\n    ? \"/\"\n    : typeof to === \"string\"\n    ? parsePath(to).pathname\n    : to.pathname;\n}\n\nexport function stripBasename(\n  pathname: string,\n  basename: string\n): string | null {\n  if (basename === \"/\") return pathname;\n\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n\n  let nextChar = pathname.charAt(basename.length);\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n\n  return pathname.slice(basename.length) || \"/\";\n}\n\nexport const joinPaths = (paths: string[]): string =>\n  paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n\nexport const normalizePathname = (pathname: string): string =>\n  pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n\nconst normalizeSearch = (search: string): string =>\n  !search || search === \"?\"\n    ? \"\"\n    : search.startsWith(\"?\")\n    ? search\n    : \"?\" + search;\n\nconst normalizeHash = (hash: string): string =>\n  !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n", "import * as React from \"react\";\nimport type { Location, Path, To } from \"history\";\nimport { Action as NavigationType, parsePath } from \"history\";\n\nimport { LocationContext, NavigationContext, RouteContext } from \"./context\";\nimport type {\n  ParamParseKey,\n  Params,\n  PathMatch,\n  PathPattern,\n  RouteMatch,\n  RouteObject,\n} from \"./router\";\nimport {\n  getToPathname,\n  invariant,\n  joinPaths,\n  matchPath,\n  matchRoutes,\n  resolveTo,\n  warning,\n  warningOnce,\n} from \"./router\";\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/docs/en/v6/api#usehref\n */\nexport function useHref(to: To): string {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useHref() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { hash, pathname, search } = useResolvedPath(to);\n\n  let joinedPathname = pathname;\n  if (basename !== \"/\") {\n    let toPathname = getToPathname(to);\n    let endsWithSlash = toPathname != null && toPathname.endsWith(\"/\");\n    joinedPathname =\n      pathname === \"/\"\n        ? basename + (endsWithSlash ? \"/\" : \"\")\n        : joinPaths([basename, pathname]);\n  }\n\n  return navigator.createHref({ pathname: joinedPathname, search, hash });\n}\n\n/**\n * Returns true if this component is a descendant of a <Router>.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useinroutercontext\n */\nexport function useInRouterContext(): boolean {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/docs/en/v6/api#uselocation\n */\nexport function useLocation(): Location {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useLocation() may be used only in the context of a <Router> component.`\n  );\n\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/docs/en/v6/api#usenavigationtype\n */\nexport function useNavigationType(): NavigationType {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns true if the URL for the given \"to\" value matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * <NavLink>.\n *\n * @see https://reactrouter.com/docs/en/v6/api#usematch\n */\nexport function useMatch<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(pattern: PathPattern<Path> | Path): PathMatch<ParamKey> | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useMatch() may be used only in the context of a <Router> component.`\n  );\n\n  let { pathname } = useLocation();\n  return React.useMemo(\n    () => matchPath<ParamKey, Path>(pattern, pathname),\n    [pathname, pattern]\n  );\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\nexport interface NavigateFunction {\n  (to: To, options?: NavigateOptions): void;\n  (delta: number): void;\n}\n\nexport interface NavigateOptions {\n  replace?: boolean;\n  state?: any;\n}\n\n/**\n * Returns an imperative method for changing the location. Used by <Link>s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/docs/en/v6/api#usenavigate\n */\nexport function useNavigate(): NavigateFunction {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useNavigate() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    matches.map((match) => match.pathnameBase)\n  );\n\n  let activeRef = React.useRef(false);\n  React.useEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(\n        activeRef.current,\n        `You should call navigate() in a React.useEffect(), not when ` +\n          `your component is first rendered.`\n      );\n\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        navigator.go(to);\n        return;\n      }\n\n      let path = resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname\n      );\n\n      if (basename !== \"/\") {\n        path.pathname = joinPaths([basename, path.pathname]);\n      }\n\n      (!!options.replace ? navigator.replace : navigator.push)(\n        path,\n        options.state\n      );\n    },\n    [basename, navigator, routePathnamesJson, locationPathname]\n  );\n\n  return navigate;\n}\n\nconst OutletContext = React.createContext<unknown>(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/docs/en/v6/api#useoutletcontext\n */\nexport function useOutletContext<Context = unknown>(): Context {\n  return React.useContext(OutletContext) as Context;\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by <Outlet> to render child routes.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useoutlet\n */\nexport function useOutlet(context?: unknown): React.ReactElement | null {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return (\n      <OutletContext.Provider value={context}>{outlet}</OutletContext.Provider>\n    );\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useparams\n */\nexport function useParams<\n  ParamsOrKey extends string | Record<string, string | undefined> = string\n>(): Readonly<\n  [ParamsOrKey] extends [string] ? Params<ParamsOrKey> : Partial<ParamsOrKey>\n> {\n  let { matches } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? (routeMatch.params as any) : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useresolvedpath\n */\nexport function useResolvedPath(to: To): Path {\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    matches.map((match) => match.pathnameBase)\n  );\n\n  return React.useMemo(\n    () => resolveTo(to, JSON.parse(routePathnamesJson), locationPathname),\n    [to, routePathnamesJson, locationPathname]\n  );\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an <Outlet> to render their child route's\n * element.\n *\n * @see https://reactrouter.com/docs/en/v6/api#useroutes\n */\nexport function useRoutes(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string\n): React.ReactElement | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useRoutes() may be used only in the context of a <Router> component.`\n  );\n\n  let { matches: parentMatches } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n\n  if (__DEV__) {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = (parentRoute && parentRoute.path) || \"\";\n    warningOnce(\n      parentPathname,\n      !parentRoute || parentPath.endsWith(\"*\"),\n      `You rendered descendant <Routes> (or called \\`useRoutes()\\`) at ` +\n        `\"${parentPathname}\" (under <Route path=\"${parentPath}\">) but the ` +\n        `parent route path has no trailing \"*\". This means if you navigate ` +\n        `deeper, the parent won't match anymore and therefore the child ` +\n        `routes will never render.\\n\\n` +\n        `Please change the parent <Route path=\"${parentPath}\"> to <Route ` +\n        `path=\"${parentPath === \"/\" ? \"*\" : `${parentPath}/*`}\">.`\n    );\n  }\n\n  let locationFromContext = useLocation();\n\n  let location;\n  if (locationArg) {\n    let parsedLocationArg =\n      typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n    invariant(\n      parentPathnameBase === \"/\" ||\n        parsedLocationArg.pathname?.startsWith(parentPathnameBase),\n      `When overriding the location using \\`<Routes location>\\` or \\`useRoutes(routes, location)\\`, ` +\n        `the location pathname must begin with the portion of the URL pathname that was ` +\n        `matched by all parent routes. The current pathname base is \"${parentPathnameBase}\" ` +\n        `but pathname \"${parsedLocationArg.pathname}\" was given in the \\`location\\` prop.`\n    );\n\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n\n  let pathname = location.pathname || \"/\";\n  let remainingPathname =\n    parentPathnameBase === \"/\"\n      ? pathname\n      : pathname.slice(parentPathnameBase.length) || \"/\";\n  let matches = matchRoutes(routes, { pathname: remainingPathname });\n\n  if (__DEV__) {\n    warning(\n      parentRoute || matches != null,\n      `No routes matched location \"${location.pathname}${location.search}${location.hash}\" `\n    );\n\n    warning(\n      matches == null ||\n        matches[matches.length - 1].route.element !== undefined,\n      `Matched leaf route at location \"${location.pathname}${location.search}${location.hash}\" does not have an element. ` +\n        `This means it will render an <Outlet /> with a null value by default resulting in an \"empty\" page.`\n    );\n  }\n\n  return _renderMatches(\n    matches &&\n      matches.map((match) =>\n        Object.assign({}, match, {\n          params: Object.assign({}, parentParams, match.params),\n          pathname: joinPaths([parentPathnameBase, match.pathname]),\n          pathnameBase:\n            match.pathnameBase === \"/\"\n              ? parentPathnameBase\n              : joinPaths([parentPathnameBase, match.pathnameBase]),\n        })\n      ),\n    parentMatches\n  );\n}\n\nexport function _renderMatches(\n  matches: RouteMatch[] | null,\n  parentMatches: RouteMatch[] = []\n): React.ReactElement | null {\n  if (matches == null) return null;\n\n  return matches.reduceRight((outlet, match, index) => {\n    return (\n      <RouteContext.Provider\n        children={\n          match.route.element !== undefined ? match.route.element : outlet\n        }\n        value={{\n          outlet,\n          matches: parentMatches.concat(matches.slice(0, index + 1)),\n        }}\n      />\n    );\n  }, null as React.ReactElement | null);\n}\n", "import * as React from \"react\";\nimport type { InitialEntry, Location, MemoryHistory, To } from \"history\";\nimport {\n  Action as NavigationType,\n  createMemoryHistory,\n  parsePath,\n} from \"history\";\n\nimport { LocationContext, NavigationContext, Navigator } from \"./context\";\nimport {\n  useInRouterContext,\n  useNavigate,\n  useOutlet,\n  useRoutes,\n  _renderMatches,\n} from \"./hooks\";\nimport type { RouteMatch, RouteObject } from \"./router\";\nimport { invariant, normalizePathname, stripBasename, warning } from \"./router\";\n\nexport interface MemoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n}\n\n/**\n * A <Router> that stores all entries in memory.\n *\n * @see https://reactrouter.com/docs/en/v6/api#memoryrouter\n */\nexport function MemoryRouter({\n  basename,\n  children,\n  initialEntries,\n  initialIndex,\n}: MemoryRouterProps): React.ReactElement {\n  let historyRef = React.useRef<MemoryHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({ initialEntries, initialIndex });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface NavigateProps {\n  to: To;\n  replace?: boolean;\n  state?: any;\n}\n\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/docs/en/v6/api#navigate\n */\nexport function Navigate({ to, replace, state }: NavigateProps): null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of\n    // the router loaded. We can help them understand how to avoid that.\n    `<Navigate> may be used only in the context of a <Router> component.`\n  );\n\n  warning(\n    !React.useContext(NavigationContext).static,\n    `<Navigate> must not be used on the initial render in a <StaticRouter>. ` +\n      `This is a no-op, but you should modify your code so the <Navigate> is ` +\n      `only ever rendered in response to some user interaction or state change.`\n  );\n\n  let navigate = useNavigate();\n  React.useEffect(() => {\n    navigate(to, { replace, state });\n  });\n\n  return null;\n}\n\nexport interface OutletProps {\n  context?: unknown;\n}\n\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/docs/en/v6/api#outlet\n */\nexport function Outlet(props: OutletProps): React.ReactElement | null {\n  return useOutlet(props.context);\n}\n\nexport interface RouteProps {\n  caseSensitive?: boolean;\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n  index?: boolean;\n  path?: string;\n}\n\nexport interface PathRouteProps {\n  caseSensitive?: boolean;\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n  index?: false;\n  path: string;\n}\n\nexport interface LayoutRouteProps {\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n}\n\nexport interface IndexRouteProps {\n  element?: React.ReactNode | null;\n  index: true;\n}\n\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/docs/en/v6/api#route\n */\nexport function Route(\n  _props: PathRouteProps | LayoutRouteProps | IndexRouteProps\n): React.ReactElement | null {\n  invariant(\n    false,\n    `A <Route> is only ever to be used as the child of <Routes> element, ` +\n      `never rendered directly. Please wrap your <Route> in a <Routes>.`\n  );\n}\n\nexport interface RouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  location: Partial<Location> | string;\n  navigationType?: NavigationType;\n  navigator: Navigator;\n  static?: boolean;\n}\n\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a <Router> directly. Instead, you'll render a\n * router that is more specific to your environment such as a <BrowserRouter>\n * in web browsers or a <StaticRouter> for server rendering.\n *\n * @see https://reactrouter.com/docs/en/v6/api#router\n */\nexport function Router({\n  basename: basenameProp = \"/\",\n  children = null,\n  location: locationProp,\n  navigationType = NavigationType.Pop,\n  navigator,\n  static: staticProp = false,\n}: RouterProps): React.ReactElement | null {\n  invariant(\n    !useInRouterContext(),\n    `You cannot render a <Router> inside another <Router>.` +\n      ` You should never have more than one in your app.`\n  );\n\n  let basename = normalizePathname(basenameProp);\n  let navigationContext = React.useMemo(\n    () => ({ basename, navigator, static: staticProp }),\n    [basename, navigator, staticProp]\n  );\n\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\",\n  } = locationProp;\n\n  let location = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n\n    if (trailingPathname == null) {\n      return null;\n    }\n\n    return {\n      pathname: trailingPathname,\n      search,\n      hash,\n      state,\n      key,\n    };\n  }, [basename, pathname, search, hash, state, key]);\n\n  warning(\n    location != null,\n    `<Router basename=\"${basename}\"> is not able to match the URL ` +\n      `\"${pathname}${search}${hash}\" because it does not start with the ` +\n      `basename, so the <Router> won't render anything.`\n  );\n\n  if (location == null) {\n    return null;\n  }\n\n  return (\n    <NavigationContext.Provider value={navigationContext}>\n      <LocationContext.Provider\n        children={children}\n        value={{ location, navigationType }}\n      />\n    </NavigationContext.Provider>\n  );\n}\n\nexport interface RoutesProps {\n  children?: React.ReactNode;\n  location?: Partial<Location> | string;\n}\n\n/**\n * A container for a nested tree of <Route> elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/docs/en/v6/api#routes\n */\nexport function Routes({\n  children,\n  location,\n}: RoutesProps): React.ReactElement | null {\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/docs/en/v6/api#createroutesfromchildren\n */\nexport function createRoutesFromChildren(\n  children: React.ReactNode\n): RouteObject[] {\n  let routes: RouteObject[] = [];\n\n  React.Children.forEach(children, (element) => {\n    if (!React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(\n        routes,\n        createRoutesFromChildren(element.props.children)\n      );\n      return;\n    }\n\n    invariant(\n      element.type === Route,\n      `[${\n        typeof element.type === \"string\" ? element.type : element.type.name\n      }] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`\n    );\n\n    let route: RouteObject = {\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      index: element.props.index,\n      path: element.props.path,\n    };\n\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(element.props.children);\n    }\n\n    routes.push(route);\n  });\n\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nexport function renderMatches(\n  matches: RouteMatch[] | null\n): React.ReactElement | null {\n  return _renderMatches(matches);\n}\n", "/**\n * NOTE: If you refactor this to split up the modules into separate files,\n * you'll need to update the rollup config for react-router-dom-v5-compat.\n */\nimport * as React from \"react\";\nimport type { BrowserHistory, HashHistory, History } from \"history\";\nimport { createBrowserHistory, createHashHistory } from \"history\";\nimport {\n  MemoryRouter,\n  Navigate,\n  Outlet,\n  Route,\n  Router,\n  Routes,\n  createRoutesFromChildren,\n  generatePath,\n  matchRoutes,\n  matchPath,\n  createPath,\n  parsePath,\n  resolvePath,\n  renderMatches,\n  useHref,\n  useInRouterContext,\n  useLocation,\n  useMatch,\n  useNavigate,\n  useNavigationType,\n  useOutlet,\n  useParams,\n  useResolvedPath,\n  useRoutes,\n  useOutletContext,\n} from \"react-router\";\nimport type { To } from \"react-router\";\n\nfunction warning(cond: boolean, message: string): void {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging React Router!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// RE-EXPORTS\n////////////////////////////////////////////////////////////////////////////////\n\n// Note: Keep in sync with react-router exports!\nexport {\n  MemoryRouter,\n  Navigate,\n  Outlet,\n  Route,\n  Router,\n  Routes,\n  createRoutesFromChildren,\n  generatePath,\n  matchRoutes,\n  matchPath,\n  createPath,\n  parsePath,\n  renderMatches,\n  resolvePath,\n  useHref,\n  useInRouterContext,\n  useLocation,\n  useMatch,\n  useNavigate,\n  useNavigationType,\n  useOutlet,\n  useParams,\n  useResolvedPath,\n  useRoutes,\n  useOutletContext,\n};\n\nexport { NavigationType } from \"react-router\";\nexport type {\n  Hash,\n  Location,\n  Path,\n  To,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigator,\n  OutletProps,\n  Params,\n  PathMatch,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  PathRouteProps,\n  LayoutRouteProps,\n  IndexRouteProps,\n  RouterProps,\n  Pathname,\n  Search,\n  RoutesProps,\n} from \"react-router\";\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  UNSAFE_NavigationContext,\n  UNSAFE_LocationContext,\n  UNSAFE_RouteContext,\n} from \"react-router\";\n\n////////////////////////////////////////////////////////////////////////////////\n// COMPONENTS\n////////////////////////////////////////////////////////////////////////////////\n\nexport interface BrowserRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nexport function BrowserRouter({\n  basename,\n  children,\n  window,\n}: BrowserRouterProps) {\n  let historyRef = React.useRef<BrowserHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HashRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nexport function HashRouter({ basename, children, window }: HashRouterProps) {\n  let historyRef = React.useRef<HashHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HistoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  history: History;\n}\n\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter({ basename, children, history }: HistoryRouterProps) {\n  const [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nif (__DEV__) {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nexport { HistoryRouter as unstable_HistoryRouter };\n\nfunction isModifiedEvent(event: React.MouseEvent) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport interface LinkProps\n  extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"href\"> {\n  reloadDocument?: boolean;\n  replace?: boolean;\n  state?: any;\n  to: To;\n}\n\n/**\n * The public API for rendering a history-aware <a>.\n */\nexport const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(\n  function LinkWithRef(\n    { onClick, reloadDocument, replace = false, state, target, to, ...rest },\n    ref\n  ) {\n    let href = useHref(to);\n    let internalOnClick = useLinkClickHandler(to, { replace, state, target });\n    function handleClick(\n      event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n    ) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented && !reloadDocument) {\n        internalOnClick(event);\n      }\n    }\n\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a\n        {...rest}\n        href={href}\n        onClick={handleClick}\n        ref={ref}\n        target={target}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Link.displayName = \"Link\";\n}\n\nexport interface NavLinkProps\n  extends Omit<LinkProps, \"className\" | \"style\" | \"children\"> {\n  children?:\n    | React.ReactNode\n    | ((props: { isActive: boolean }) => React.ReactNode);\n  caseSensitive?: boolean;\n  className?: string | ((props: { isActive: boolean }) => string | undefined);\n  end?: boolean;\n  style?:\n    | React.CSSProperties\n    | ((props: { isActive: boolean }) => React.CSSProperties);\n}\n\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\nexport const NavLink = React.forwardRef<HTMLAnchorElement, NavLinkProps>(\n  function NavLinkWithRef(\n    {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      children,\n      ...rest\n    },\n    ref\n  ) {\n    let location = useLocation();\n    let path = useResolvedPath(to);\n\n    let locationPathname = location.pathname;\n    let toPathname = path.pathname;\n    if (!caseSensitive) {\n      locationPathname = locationPathname.toLowerCase();\n      toPathname = toPathname.toLowerCase();\n    }\n\n    let isActive =\n      locationPathname === toPathname ||\n      (!end &&\n        locationPathname.startsWith(toPathname) &&\n        locationPathname.charAt(toPathname.length) === \"/\");\n\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n\n    let className: string | undefined;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp({ isActive });\n    } else {\n      // If the className prop is not a function, we use a default `active`\n      // class for <NavLink />s that are active. In v5 `active` was the default\n      // value for `activeClassName`, but we are removing that API and can still\n      // use the old default behavior for a cleaner upgrade path and keep the\n      // simple styling rules working as they currently do.\n      className = [classNameProp, isActive ? \"active\" : null]\n        .filter(Boolean)\n        .join(\" \");\n    }\n\n    let style =\n      typeof styleProp === \"function\" ? styleProp({ isActive }) : styleProp;\n\n    return (\n      <Link\n        {...rest}\n        aria-current={ariaCurrent}\n        className={className}\n        ref={ref}\n        style={style}\n        to={to}\n      >\n        {typeof children === \"function\" ? children({ isActive }) : children}\n      </Link>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// HOOKS\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nexport function useLinkClickHandler<E extends Element = HTMLAnchorElement>(\n  to: To,\n  {\n    target,\n    replace: replaceProp,\n    state,\n  }: {\n    target?: React.HTMLAttributeAnchorTarget;\n    replace?: boolean;\n    state?: any;\n  } = {}\n): (event: React.MouseEvent<E, MouseEvent>) => void {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to);\n\n  return React.useCallback(\n    (event: React.MouseEvent<E, MouseEvent>) => {\n      if (\n        event.button === 0 && // Ignore everything but left clicks\n        (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n        !isModifiedEvent(event) // Ignore clicks with modifier keys\n      ) {\n        event.preventDefault();\n\n        // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here.\n        let replace =\n          !!replaceProp || createPath(location) === createPath(path);\n\n        navigate(to, { replace, state });\n      }\n    },\n    [location, navigate, path, replaceProp, state, target, to]\n  );\n}\n\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nexport function useSearchParams(defaultInit?: URLSearchParamsInit) {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not ` +\n      `support the URLSearchParams API. If you need to support Internet ` +\n      `Explorer 11, we recommend you load a polyfill such as ` +\n      `https://github.com/ungap/url-search-params\\n\\n` +\n      `If you're unsure how to load polyfills, we recommend you check out ` +\n      `https://polyfill.io/v3/ which provides some recommendations about how ` +\n      `to load polyfills only for users that need them, instead of for every ` +\n      `user.`\n  );\n\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n\n  let location = useLocation();\n  let searchParams = React.useMemo(() => {\n    let searchParams = createSearchParams(location.search);\n\n    for (let key of defaultSearchParamsRef.current.keys()) {\n      if (!searchParams.has(key)) {\n        defaultSearchParamsRef.current.getAll(key).forEach((value) => {\n          searchParams.append(key, value);\n        });\n      }\n    }\n\n    return searchParams;\n  }, [location.search]);\n\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback(\n    (\n      nextInit: URLSearchParamsInit,\n      navigateOptions?: { replace?: boolean; state?: any }\n    ) => {\n      navigate(\"?\" + createSearchParams(nextInit), navigateOptions);\n    },\n    [navigate]\n  );\n\n  return [searchParams, setSearchParams] as const;\n}\n\nexport type ParamKeyValuePair = [string, string];\n\nexport type URLSearchParamsInit =\n  | string\n  | ParamKeyValuePair[]\n  | Record<string, string | string[]>\n  | URLSearchParams;\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nexport function createSearchParams(\n  init: URLSearchParamsInit = \"\"\n): URLSearchParams {\n  return new URLSearchParams(\n    typeof init === \"string\" ||\n    Array.isArray(init) ||\n    init instanceof URLSearchParams\n      ? init\n      : Object.keys(init).reduce((memo, key) => {\n          let value = init[key];\n          return memo.concat(\n            Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n          );\n        }, [] as ParamKeyValuePair[])\n  );\n}\n", "/**\n * @remix-run/react v1.5.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport React__default, { useContext } from 'react';\n\n// TODO: We eventually might not want to import anything directly from `history`\nclass RemixErrorBoundary extends React__default.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: props.error || null,\n      location: props.location\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    return {\n      error\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application (even the HTML!) that will have no effect--the error page\n    // continues to display. This gives us a mechanism to recover from the error\n    // when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (state.location !== props.location) {\n      return {\n        error: props.error || null,\n        location: props.location\n      };\n    } // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n\n\n    return {\n      error: props.error || state.error,\n      location: state.location\n    };\n  }\n\n  render() {\n    if (this.state.error) {\n      return /*#__PURE__*/React__default.createElement(this.props.component, {\n        error: this.state.error\n      });\n    } else {\n      return this.props.children;\n    }\n  }\n\n}\n/**\n * When app's don't provide a root level ErrorBoundary, we default to this.\n */\n\nfunction RemixRootDefaultErrorBoundary({\n  error\n}) {\n  console.error(error);\n  return /*#__PURE__*/React__default.createElement(\"html\", {\n    lang: \"en\"\n  }, /*#__PURE__*/React__default.createElement(\"head\", null, /*#__PURE__*/React__default.createElement(\"meta\", {\n    charSet: \"utf-8\"\n  }), /*#__PURE__*/React__default.createElement(\"meta\", {\n    name: \"viewport\",\n    content: \"width=device-width,initial-scale=1,viewport-fit=cover\"\n  }), /*#__PURE__*/React__default.createElement(\"title\", null, \"Application Error!\")), /*#__PURE__*/React__default.createElement(\"body\", null, /*#__PURE__*/React__default.createElement(\"main\", {\n    style: {\n      fontFamily: \"system-ui, sans-serif\",\n      padding: \"2rem\"\n    }\n  }, /*#__PURE__*/React__default.createElement(\"h1\", {\n    style: {\n      fontSize: \"24px\"\n    }\n  }, \"Application Error\"), /*#__PURE__*/React__default.createElement(\"pre\", {\n    style: {\n      padding: \"2rem\",\n      background: \"hsla(10, 50%, 50%, 0.1)\",\n      color: \"red\",\n      overflow: \"auto\"\n    }\n  }, error.stack)), /*#__PURE__*/React__default.createElement(\"script\", {\n    dangerouslySetInnerHTML: {\n      __html: `\n              console.log(\n                \"\uD83D\uDCBF Hey developer\uD83D\uDC4B. You can provide a way better UX than this when your app throws errors. Check out https://remix.run/guides/errors for more information.\"\n              );\n            `\n    }\n  })));\n}\nlet RemixCatchContext = /*#__PURE__*/React__default.createContext(undefined);\n/**\n * Returns the status code and thrown response data.\n *\n * @see https://remix.run/api/conventions#catchboundary\n */\n\nfunction useCatch() {\n  return useContext(RemixCatchContext);\n}\nfunction RemixCatchBoundary({\n  catch: catchVal,\n  component: Component,\n  children\n}) {\n  if (catchVal) {\n    return /*#__PURE__*/React__default.createElement(RemixCatchContext.Provider, {\n      value: catchVal\n    }, /*#__PURE__*/React__default.createElement(Component, null));\n  }\n\n  return /*#__PURE__*/React__default.createElement(React__default.Fragment, null, children);\n}\n/**\n * When app's don't provide a root level CatchBoundary, we default to this.\n */\n\nfunction RemixRootDefaultCatchBoundary() {\n  let caught = useCatch();\n  return /*#__PURE__*/React__default.createElement(\"html\", {\n    lang: \"en\"\n  }, /*#__PURE__*/React__default.createElement(\"head\", null, /*#__PURE__*/React__default.createElement(\"meta\", {\n    charSet: \"utf-8\"\n  }), /*#__PURE__*/React__default.createElement(\"meta\", {\n    name: \"viewport\",\n    content: \"width=device-width,initial-scale=1,viewport-fit=cover\"\n  }), /*#__PURE__*/React__default.createElement(\"title\", null, \"Unhandled Thrown Response!\")), /*#__PURE__*/React__default.createElement(\"body\", null, /*#__PURE__*/React__default.createElement(\"h1\", {\n    style: {\n      fontFamily: \"system-ui, sans-serif\",\n      padding: \"2rem\"\n    }\n  }, caught.status, \" \", caught.statusText), /*#__PURE__*/React__default.createElement(\"script\", {\n    dangerouslySetInnerHTML: {\n      __html: `\n              console.log(\n                \"\uD83D\uDCBF Hey developer\uD83D\uDC4B. You can provide a way better UX than this when your app throws 404s (and other responses). Check out https://remix.run/guides/not-found for more information.\"\n              );\n            `\n    }\n  })));\n}\n\nexport { RemixCatchBoundary, RemixErrorBoundary, RemixRootDefaultCatchBoundary, RemixRootDefaultErrorBoundary, useCatch };\n", "/**\n * @remix-run/react v1.5.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nfunction invariant(value, message) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\n\nexport { invariant as default };\n", "/**\n * @remix-run/react v1.5.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport { parsePath } from 'history';\nimport { loadRouteModule } from './routeModules.js';\n\n// TODO: We eventually might not want to import anything directly from `history`\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Gets all the links for a set of matches. The modules are assumed to have been\n * loaded already.\n */\nfunction getLinksForMatches(matches, routeModules, manifest) {\n  let descriptors = matches.map(match => {\n    var _module$links;\n\n    let module = routeModules[match.route.id];\n    return ((_module$links = module.links) === null || _module$links === void 0 ? void 0 : _module$links.call(module)) || [];\n  }).flat(1);\n  let preloads = getCurrentPageModulePreloadHrefs(matches, manifest);\n  return dedupe(descriptors, preloads);\n}\nasync function prefetchStyleLinks(routeModule) {\n  if (!routeModule.links) return;\n  let descriptors = routeModule.links();\n  if (!descriptors) return;\n  let styleLinks = [];\n\n  for (let descriptor of descriptors) {\n    if (!isPageLinkDescriptor(descriptor) && descriptor.rel === \"stylesheet\") {\n      styleLinks.push({ ...descriptor,\n        rel: \"preload\",\n        as: \"style\"\n      });\n    }\n  } // don't block for non-matching media queries\n\n\n  let matchingLinks = styleLinks.filter(link => !link.media || window.matchMedia(link.media).matches);\n  await Promise.all(matchingLinks.map(prefetchStyleLink));\n}\n\nasync function prefetchStyleLink(descriptor) {\n  return new Promise(resolve => {\n    let link = document.createElement(\"link\");\n    Object.assign(link, descriptor);\n\n    function removeLink() {\n      // if a navigation interrupts this prefetch React will update the <head>\n      // and remove the link we put in there manually, so we check if it's still\n      // there before trying to remove it\n      if (document.head.contains(link)) {\n        document.head.removeChild(link);\n      }\n    }\n\n    link.onload = () => {\n      removeLink();\n      resolve();\n    };\n\n    link.onerror = () => {\n      removeLink();\n      resolve();\n    };\n\n    document.head.appendChild(link);\n  });\n} ////////////////////////////////////////////////////////////////////////////////\n\n\nfunction isPageLinkDescriptor(object) {\n  return object != null && typeof object.page === \"string\";\n}\nfunction isHtmlLinkDescriptor(object) {\n  return object != null && typeof object.rel === \"string\" && typeof object.href === \"string\";\n}\nasync function getStylesheetPrefetchLinks(matches, routeModules) {\n  let links = await Promise.all(matches.map(async match => {\n    let mod = await loadRouteModule(match.route, routeModules);\n    return mod.links ? mod.links() : [];\n  }));\n  return links.flat(1).filter(isHtmlLinkDescriptor).filter(link => link.rel === \"stylesheet\" || link.rel === \"preload\").map(({\n    rel,\n    ...attrs\n  }) => rel === \"preload\" ? {\n    rel: \"prefetch\",\n    ...attrs\n  } : {\n    rel: \"prefetch\",\n    as: \"style\",\n    ...attrs\n  });\n} // This is ridiculously identical to transition.ts `filterMatchesToLoad`\n\nfunction getNewMatchesForLinks(page, nextMatches, currentMatches, location, mode) {\n  let path = parsePathPatch(page);\n\n  let isNew = (match, index) => {\n    if (!currentMatches[index]) return true;\n    return match.route.id !== currentMatches[index].route.id;\n  };\n\n  let matchPathChanged = (match, index) => {\n    var _currentMatches$index;\n\n    return (// param change, /users/123 -> /users/456\n      currentMatches[index].pathname !== match.pathname || // splat param changed, which is not present in match.path\n      // e.g. /files/images/avatar.jpg -> files/finances.xls\n      ((_currentMatches$index = currentMatches[index].route.path) === null || _currentMatches$index === void 0 ? void 0 : _currentMatches$index.endsWith(\"*\")) && currentMatches[index].params[\"*\"] !== match.params[\"*\"]\n    );\n  }; // NOTE: keep this mostly up-to-date w/ the transition data diff, but this\n  // version doesn't care about submissions\n\n\n  let newMatches = mode === \"data\" && location.search !== path.search ? // this is really similar to stuff in transition.ts, maybe somebody smarter\n  // than me (or in less of a hurry) can share some of it. You're the best.\n  nextMatches.filter((match, index) => {\n    if (!match.route.hasLoader) {\n      return false;\n    }\n\n    if (isNew(match, index) || matchPathChanged(match, index)) {\n      return true;\n    }\n\n    if (match.route.shouldReload) {\n      return match.route.shouldReload({\n        params: match.params,\n        prevUrl: new URL(location.pathname + location.search + location.hash, window.origin),\n        url: new URL(page, window.origin)\n      });\n    }\n\n    return true;\n  }) : nextMatches.filter((match, index) => {\n    return (mode === \"assets\" || match.route.hasLoader) && (isNew(match, index) || matchPathChanged(match, index));\n  });\n  return newMatches;\n}\nfunction getDataLinkHrefs(page, matches, manifest) {\n  let path = parsePathPatch(page);\n  return dedupeHrefs(matches.filter(match => manifest.routes[match.route.id].hasLoader).map(match => {\n    let {\n      pathname,\n      search\n    } = path;\n    let searchParams = new URLSearchParams(search);\n    searchParams.set(\"_data\", match.route.id);\n    return `${pathname}?${searchParams}`;\n  }));\n}\nfunction getModuleLinkHrefs(matches, manifestPatch) {\n  return dedupeHrefs(matches.map(match => {\n    let route = manifestPatch.routes[match.route.id];\n    let hrefs = [route.module];\n\n    if (route.imports) {\n      hrefs = hrefs.concat(route.imports);\n    }\n\n    return hrefs;\n  }).flat(1));\n} // The `<Script>` will render rel=modulepreload for the current page, we don't\n// need to include them in a page prefetch, this gives us the list to remove\n// while deduping.\n\nfunction getCurrentPageModulePreloadHrefs(matches, manifest) {\n  return dedupeHrefs(matches.map(match => {\n    let route = manifest.routes[match.route.id];\n    let hrefs = [route.module];\n\n    if (route.imports) {\n      hrefs = hrefs.concat(route.imports);\n    }\n\n    return hrefs;\n  }).flat(1));\n}\n\nfunction dedupeHrefs(hrefs) {\n  return [...new Set(hrefs)];\n}\n\nfunction dedupe(descriptors, preloads) {\n  let set = new Set();\n  let preloadsSet = new Set(preloads);\n  return descriptors.reduce((deduped, descriptor) => {\n    let alreadyModulePreload = !isPageLinkDescriptor(descriptor) && descriptor.as === \"script\" && descriptor.href && preloadsSet.has(descriptor.href);\n\n    if (alreadyModulePreload) {\n      return deduped;\n    }\n\n    let str = JSON.stringify(descriptor);\n\n    if (!set.has(str)) {\n      set.add(str);\n      deduped.push(descriptor);\n    }\n\n    return deduped;\n  }, []);\n} // https://github.com/remix-run/history/issues/897\n\nfunction parsePathPatch(href) {\n  let path = parsePath(href);\n  if (path.search === undefined) path.search = \"\";\n  return path;\n}\n\nexport { dedupe, getDataLinkHrefs, getLinksForMatches, getModuleLinkHrefs, getNewMatchesForLinks, getStylesheetPrefetchLinks, isHtmlLinkDescriptor, isPageLinkDescriptor, prefetchStyleLinks };\n", "/**\n * @remix-run/react v1.5.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n// TODO: We eventually might not want to import anything directly from `history`\n// and leverage `react-router` here instead\n// TODO: import/export from react-router-dom\n\n/**\n * A React component that is rendered when the server throws a Response.\n *\n * @see https://remix.run/api/conventions#catchboundary\n */\n\n/**\n * A React component that is rendered when there is an error on a route.\n *\n * @see https://remix.run/api/conventions#errorboundary\n */\n\n/**\n * A function that defines `<link>` tags to be inserted into the `<head>` of\n * the document on route transitions.\n *\n * @see https://remix.run/api/remix#meta-links-scripts\n */\n\n/**\n * A function that returns an object of name + content pairs to use for\n * `<meta>` tags for a route. These tags will be merged with (and take\n * precedence over) tags from parent routes.\n *\n * @see https://remix.run/api/remix#meta-links-scripts\n */\n\n/**\n * A name/content pair used to render `<meta>` tags in a meta function for a\n * route. The value can be either a string, which will render a single `<meta>`\n * tag, or an array of strings that will render multiple tags with the same\n * `name` attribute.\n */\n\n/**\n * During client side transitions Remix will optimize reloading of routes that\n * are currently on the page by avoiding loading routes that aren't changing.\n * However, in some cases, like form submissions or search params Remix doesn't\n * know which routes need to be reloaded so it reloads them all to be safe.\n *\n * This function lets apps further optimize by returning `false` when Remix is\n * about to reload the route. A common case is a root loader with nothing but\n * environment variables: after form submissions the root probably doesn't need\n * to be reloaded.\n *\n * @see https://remix.run/api/conventions#unstable_shouldreload\n */\n\n/**\n * A React component that is rendered for a route.\n */\n\n/**\n * An arbitrary object that is associated with a route.\n *\n * @see https://remix.run/api/conventions#handle\n */\nasync function loadRouteModule(route, routeModulesCache) {\n  if (route.id in routeModulesCache) {\n    return routeModulesCache[route.id];\n  }\n\n  try {\n    let routeModule = await import(route.module);\n    routeModulesCache[route.id] = routeModule;\n    return routeModule;\n  } catch (error) {\n    // User got caught in the middle of a deploy and the CDN no longer has the\n    // asset we're trying to import! Reload from the server and the user\n    // (should) get the new manifest--unless the developer purged the static\n    // assets, the manifest path, but not the documents \uD83D\uDE2C\n    window.location.reload();\n    return new Promise(() => {// check out of this hook cause the DJs never gonna re[s]olve this\n    });\n  }\n}\n\nexport { loadRouteModule };\n", "/**\n * @remix-run/react v1.5.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nfunction createHtml(html) {\n  return {\n    __html: html\n  };\n}\n\nexport { createHtml };\n", "/**\n * @remix-run/react v1.5.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport { loadRouteModule } from './routeModules.js';\nimport { fetchData, isCatchResponse, extractData, isRedirectResponse } from './data.js';\nimport { CatchValue, TransitionRedirect } from './transition.js';\nimport { prefetchStyleLinks } from './links.js';\nimport invariant from './invariant.js';\n\nfunction createClientRoute(entryRoute, routeModulesCache, Component) {\n  return {\n    caseSensitive: !!entryRoute.caseSensitive,\n    element: /*#__PURE__*/React.createElement(Component, {\n      id: entryRoute.id\n    }),\n    id: entryRoute.id,\n    path: entryRoute.path,\n    index: entryRoute.index,\n    module: entryRoute.module,\n    loader: createLoader(entryRoute, routeModulesCache),\n    action: createAction(entryRoute, routeModulesCache),\n    shouldReload: createShouldReload(entryRoute, routeModulesCache),\n    ErrorBoundary: entryRoute.hasErrorBoundary,\n    CatchBoundary: entryRoute.hasCatchBoundary,\n    hasLoader: entryRoute.hasLoader\n  };\n}\nfunction createClientRoutes(routeManifest, routeModulesCache, Component, parentId) {\n  return Object.keys(routeManifest).filter(key => routeManifest[key].parentId === parentId).map(key => {\n    let route = createClientRoute(routeManifest[key], routeModulesCache, Component);\n    let children = createClientRoutes(routeManifest, routeModulesCache, Component, route.id);\n    if (children.length > 0) route.children = children;\n    return route;\n  });\n}\n\nfunction createShouldReload(route, routeModules) {\n  let shouldReload = arg => {\n    let module = routeModules[route.id];\n    invariant(module, `Expected route module to be loaded for ${route.id}`);\n\n    if (module.unstable_shouldReload) {\n      return module.unstable_shouldReload(arg);\n    }\n\n    return true;\n  };\n\n  return shouldReload;\n}\n\nasync function loadRouteModuleWithBlockingLinks(route, routeModules) {\n  let routeModule = await loadRouteModule(route, routeModules);\n  await prefetchStyleLinks(routeModule);\n  return routeModule;\n}\n\nfunction createLoader(route, routeModules) {\n  let loader = async ({\n    url,\n    signal,\n    submission\n  }) => {\n    if (route.hasLoader) {\n      let [result] = await Promise.all([fetchData(url, route.id, signal, submission), loadRouteModuleWithBlockingLinks(route, routeModules)]);\n      if (result instanceof Error) throw result;\n      let redirect = await checkRedirect(result);\n      if (redirect) return redirect;\n\n      if (isCatchResponse(result)) {\n        throw new CatchValue(result.status, result.statusText, await extractData(result));\n      }\n\n      return extractData(result);\n    } else {\n      await loadRouteModuleWithBlockingLinks(route, routeModules);\n    }\n  };\n\n  return loader;\n}\n\nfunction createAction(route, routeModules) {\n  let action = async ({\n    url,\n    signal,\n    submission\n  }) => {\n    if (!route.hasAction) {\n      console.error(`Route \"${route.id}\" does not have an action, but you are trying ` + `to submit to it. To fix this, please add an \\`action\\` function to the route`);\n    }\n\n    let result = await fetchData(url, route.id, signal, submission);\n\n    if (result instanceof Error) {\n      throw result;\n    }\n\n    let redirect = await checkRedirect(result);\n    if (redirect) return redirect;\n    await loadRouteModuleWithBlockingLinks(route, routeModules);\n\n    if (isCatchResponse(result)) {\n      throw new CatchValue(result.status, result.statusText, await extractData(result));\n    }\n\n    return extractData(result);\n  };\n\n  return action;\n}\n\nasync function checkRedirect(response) {\n  if (isRedirectResponse(response)) {\n    let url = new URL(response.headers.get(\"X-Remix-Redirect\"), window.location.origin);\n\n    if (url.origin !== window.location.origin) {\n      await new Promise(() => {\n        window.location.replace(url.href);\n      });\n    } else {\n      return new TransitionRedirect(url.pathname + url.search + url.hash, response.headers.get(\"X-Remix-Revalidate\") !== null);\n    }\n  }\n\n  return null;\n}\n\nexport { createClientRoute, createClientRoutes };\n", "/**\n * @remix-run/react v1.5.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport invariant from './invariant.js';\n\nfunction isCatchResponse(response) {\n  return response instanceof Response && response.headers.get(\"X-Remix-Catch\") != null;\n}\nfunction isErrorResponse(response) {\n  return response instanceof Response && response.headers.get(\"X-Remix-Error\") != null;\n}\nfunction isRedirectResponse(response) {\n  return response instanceof Response && response.headers.get(\"X-Remix-Redirect\") != null;\n}\nasync function fetchData(url, routeId, signal, submission) {\n  url.searchParams.set(\"_data\", routeId);\n  let init = submission ? getActionInit(submission, signal) : {\n    credentials: \"same-origin\",\n    signal\n  };\n  let response = await fetch(url.href, init);\n\n  if (isErrorResponse(response)) {\n    let data = await response.json();\n    let error = new Error(data.message);\n    error.stack = data.stack;\n    return error;\n  }\n\n  return response;\n}\nasync function extractData(response) {\n  // This same algorithm is used on the server to interpret load\n  // results when we render the HTML page.\n  let contentType = response.headers.get(\"Content-Type\");\n\n  if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n    return response.json();\n  }\n\n  return response.text();\n}\n\nfunction getActionInit(submission, signal) {\n  let {\n    encType,\n    method,\n    formData\n  } = submission;\n  let headers = undefined;\n  let body = formData;\n\n  if (encType === \"application/x-www-form-urlencoded\") {\n    body = new URLSearchParams();\n\n    for (let [key, value] of formData) {\n      invariant(typeof value === \"string\", `File inputs are not supported with encType \"application/x-www-form-urlencoded\", please use \"multipart/form-data\" instead.`);\n      body.append(key, value);\n    }\n\n    headers = {\n      \"Content-Type\": encType\n    };\n  }\n\n  return {\n    method,\n    body,\n    signal,\n    credentials: \"same-origin\",\n    headers\n  };\n}\n\nexport { extractData, fetchData, isCatchResponse, isErrorResponse, isRedirectResponse };\n", "/**\n * @remix-run/react v1.5.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport { Action } from 'history';\nimport { matchClientRoutes } from './routeMatching.js';\nimport invariant from './invariant.js';\n\n// TODO: We eventually might not want to import anything directly from `history`\n//#region Types and Utils\n////////////////////////////////////////////////////////////////////////////////\n\nclass CatchValue {\n  constructor(status, statusText, data) {\n    this.status = status;\n    this.statusText = statusText;\n    this.data = data;\n  }\n\n}\n\nfunction isActionSubmission(submission) {\n  return [\"POST\", \"PUT\", \"PATCH\", \"DELETE\"].includes(submission.method);\n}\n\nfunction isLoaderSubmission(submission) {\n  return submission.method === \"GET\";\n}\n\nfunction isRedirectLocation(location) {\n  return Boolean(location.state) && location.state.isRedirect;\n}\n\nfunction isLoaderRedirectLocation(location) {\n  return isRedirectLocation(location) && location.state.type === \"loader\";\n}\n\nfunction isActionRedirectLocation(location) {\n  return isRedirectLocation(location) && location.state.type === \"action\";\n}\n\nfunction isFetchActionRedirect(location) {\n  return isRedirectLocation(location) && location.state.type === \"fetchAction\";\n}\n\nfunction isLoaderSubmissionRedirectLocation(location) {\n  return isRedirectLocation(location) && location.state.type === \"loaderSubmission\";\n}\n\nclass TransitionRedirect {\n  constructor(location, setCookie) {\n    this.setCookie = setCookie;\n    this.location = typeof location === \"string\" ? location : location.pathname + location.search;\n  }\n\n}\nconst IDLE_TRANSITION = {\n  state: \"idle\",\n  submission: undefined,\n  location: undefined,\n  type: \"idle\"\n};\nconst IDLE_FETCHER = {\n  state: \"idle\",\n  type: \"init\",\n  data: undefined,\n  submission: undefined\n}; //#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createTransitionManager\n////////////////////////////////////////////////////////////////////////////////\n\nfunction createTransitionManager(init) {\n  let {\n    routes\n  } = init;\n  let pendingNavigationController;\n  let fetchControllers = new Map();\n  let incrementingLoadId = 0;\n  let navigationLoadId = -1;\n  let fetchReloadIds = new Map();\n  let fetchRedirectIds = new Set();\n  let matches = matchClientRoutes(routes, init.location);\n\n  if (!matches) {\n    // If we do not match a user-provided-route, fall back to the root\n    // to allow the CatchBoundary to take over\n    matches = [{\n      params: {},\n      pathname: \"\",\n      route: routes[0]\n    }];\n  }\n\n  let state = {\n    location: init.location,\n    loaderData: init.loaderData || {},\n    actionData: init.actionData,\n    catch: init.catch,\n    error: init.error,\n    catchBoundaryId: init.catchBoundaryId || null,\n    errorBoundaryId: init.errorBoundaryId || null,\n    matches,\n    nextMatches: undefined,\n    transition: IDLE_TRANSITION,\n    fetchers: new Map()\n  };\n\n  function update(updates) {\n    if (updates.transition) {\n      if (updates.transition === IDLE_TRANSITION) {\n        pendingNavigationController = undefined;\n      }\n    }\n\n    state = Object.assign({}, state, updates);\n    init.onChange(state);\n  }\n\n  function getState() {\n    return state;\n  }\n\n  function getFetcher(key) {\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n\n  function setFetcher(key, fetcher) {\n    state.fetchers.set(key, fetcher);\n  }\n\n  function deleteFetcher(key) {\n    if (fetchControllers.has(key)) abortFetcher(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    state.fetchers.delete(key);\n  }\n\n  async function send(event) {\n    switch (event.type) {\n      case \"navigation\":\n        {\n          let {\n            action,\n            location,\n            submission\n          } = event;\n          let matches = matchClientRoutes(routes, location);\n\n          if (!matches) {\n            matches = [{\n              params: {},\n              pathname: \"\",\n              route: routes[0]\n            }];\n            await handleNotFoundNavigation(location, matches);\n          } else if (!submission && isHashChangeOnly(location)) {\n            await handleHashChange(location, matches);\n          } // back/forward button, treat all as normal navigation\n          else if (action === Action.Pop) {\n            await handleLoad(location, matches);\n          } // <Form method=\"post | put | delete | patch\">\n          else if (submission && isActionSubmission(submission)) {\n            await handleActionSubmissionNavigation(location, submission, matches);\n          } // <Form method=\"get\"/>\n          else if (submission && isLoaderSubmission(submission)) {\n            await handleLoaderSubmissionNavigation(location, submission, matches);\n          } // action=>redirect\n          else if (isActionRedirectLocation(location)) {\n            await handleActionRedirect(location, matches);\n          } // <Form method=\"get\"> --> loader=>redirect\n          else if (isLoaderSubmissionRedirectLocation(location)) {\n            await handleLoaderSubmissionRedirect(location, matches);\n          } // loader=>redirect\n          else if (isLoaderRedirectLocation(location)) {\n            await handleLoaderRedirect(location, matches);\n          } // useSubmission()=>redirect\n          else if (isFetchActionRedirect(location)) {\n            await handleFetchActionRedirect(location, matches);\n          } // <Link>, navigate()\n          else {\n            await handleLoad(location, matches);\n          }\n\n          navigationLoadId = -1;\n          break;\n        }\n\n      case \"fetcher\":\n        {\n          let {\n            key,\n            submission,\n            href\n          } = event;\n          let matches = matchClientRoutes(routes, href);\n          invariant(matches, \"No matches found\");\n          if (fetchControllers.has(key)) abortFetcher(key);\n          let match = getFetcherRequestMatch(new URL(href, window.location.href), matches);\n\n          if (submission && isActionSubmission(submission)) {\n            await handleActionFetchSubmission(key, submission, match);\n          } else if (submission && isLoaderSubmission(submission)) {\n            await handleLoaderFetchSubmission(href, key, submission, match);\n          } else {\n            await handleLoaderFetch(href, key, match);\n          }\n\n          break;\n        }\n\n      default:\n        {\n          // @ts-ignore\n          throw new Error(`Unknown data event type: ${event.type}`);\n        }\n    }\n  }\n\n  function dispose() {\n    abortNormalNavigation();\n\n    for (let [, controller] of fetchControllers) {\n      controller.abort();\n    }\n  }\n\n  function isIndexRequestUrl(url) {\n    for (let param of url.searchParams.getAll(\"index\")) {\n      // only use bare `?index` params without a value\n      // \u2705 /foo?index\n      // \u2705 /foo?index&index=123\n      // \u2705 /foo?index=123&index\n      // \u274C /foo?index=123\n      if (param === \"\") {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  function getFetcherRequestMatch(url, matches) {\n    let match = matches.slice(-1)[0];\n\n    if (!isIndexRequestUrl(url) && match.route.index) {\n      return matches.slice(-2)[0];\n    }\n\n    return match;\n  }\n\n  async function handleActionFetchSubmission(key, submission, match) {\n    let currentFetcher = state.fetchers.get(key);\n    let fetcher = {\n      state: \"submitting\",\n      type: \"actionSubmission\",\n      submission,\n      data: (currentFetcher === null || currentFetcher === void 0 ? void 0 : currentFetcher.data) || undefined\n    };\n    setFetcher(key, fetcher);\n    update({\n      fetchers: new Map(state.fetchers)\n    });\n    let controller = new AbortController();\n    fetchControllers.set(key, controller);\n    let result = await callAction(submission, match, controller.signal);\n\n    if (controller.signal.aborted) {\n      return;\n    }\n\n    if (isRedirectResult(result)) {\n      let locationState = {\n        isRedirect: true,\n        type: \"fetchAction\",\n        setCookie: result.value.setCookie\n      };\n      fetchRedirectIds.add(key);\n      init.onRedirect(result.value.location, locationState);\n      let loadingFetcher = {\n        state: \"loading\",\n        type: \"actionRedirect\",\n        submission,\n        data: undefined\n      };\n      setFetcher(key, loadingFetcher);\n      update({\n        fetchers: new Map(state.fetchers)\n      });\n      return;\n    }\n\n    if (maybeBailOnError(match, key, result)) {\n      return;\n    }\n\n    if (await maybeBailOnCatch(match, key, result)) {\n      return;\n    }\n\n    let loadFetcher = {\n      state: \"loading\",\n      type: \"actionReload\",\n      data: result.value,\n      submission\n    };\n    setFetcher(key, loadFetcher);\n    update({\n      fetchers: new Map(state.fetchers)\n    });\n    let maybeActionErrorResult = isErrorResult(result) ? result : undefined;\n    let maybeActionCatchResult = isCatchResult(result) ? result : undefined;\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n    let matchesToLoad = state.nextMatches || state.matches;\n    let results = await callLoaders(state, state.transition.location || state.location, matchesToLoad, controller.signal, maybeActionErrorResult, maybeActionCatchResult, submission, match.route.id, loadFetcher);\n\n    if (controller.signal.aborted) {\n      return;\n    }\n\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    let redirect = findRedirect(results);\n\n    if (redirect) {\n      let locationState = {\n        isRedirect: true,\n        type: \"loader\",\n        setCookie: redirect.setCookie\n      };\n      init.onRedirect(redirect.location, locationState);\n      return;\n    }\n\n    let [error, errorBoundaryId] = findErrorAndBoundaryId(results, state.matches, maybeActionErrorResult);\n    let [catchVal, catchBoundaryId] = (await findCatchAndBoundaryId(results, state.matches, maybeActionCatchResult)) || [];\n    let doneFetcher = {\n      state: \"idle\",\n      type: \"done\",\n      data: result.value,\n      submission: undefined\n    };\n    setFetcher(key, doneFetcher);\n    let abortedKeys = abortStaleFetchLoads(loadId);\n\n    if (abortedKeys) {\n      markFetchersDone(abortedKeys);\n    }\n\n    let yeetedNavigation = yeetStaleNavigationLoad(loadId); // need to do what we would have done when the navigation load completed\n\n    if (yeetedNavigation) {\n      let {\n        transition\n      } = state;\n      invariant(transition.state === \"loading\", \"Expected loading transition\");\n      update({\n        location: transition.location,\n        matches: state.nextMatches,\n        error,\n        errorBoundaryId,\n        catch: catchVal,\n        catchBoundaryId,\n        loaderData: makeLoaderData(state, results, matchesToLoad),\n        actionData: transition.type === \"actionReload\" ? state.actionData : undefined,\n        transition: IDLE_TRANSITION,\n        fetchers: new Map(state.fetchers)\n      });\n    } // otherwise just update the info for the data\n    else {\n      update({\n        fetchers: new Map(state.fetchers),\n        error,\n        errorBoundaryId,\n        loaderData: makeLoaderData(state, results, matchesToLoad)\n      });\n    }\n  }\n\n  function yeetStaleNavigationLoad(landedId) {\n    let isLoadingNavigation = state.transition.state === \"loading\";\n\n    if (isLoadingNavigation && navigationLoadId < landedId) {\n      abortNormalNavigation();\n      return true;\n    }\n\n    return false;\n  }\n\n  function markFetchersDone(keys) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher = {\n        state: \"idle\",\n        type: \"done\",\n        data: fetcher.data,\n        submission: undefined\n      };\n      setFetcher(key, doneFetcher);\n    }\n  }\n\n  function abortStaleFetchLoads(landedId) {\n    let yeetedKeys = [];\n\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, `Expected fetcher: ${key}`);\n\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n\n    return yeetedKeys.length ? yeetedKeys : false;\n  }\n\n  async function handleLoaderFetchSubmission(href, key, submission, match) {\n    let currentFetcher = state.fetchers.get(key);\n    let fetcher = {\n      state: \"submitting\",\n      type: \"loaderSubmission\",\n      submission,\n      data: (currentFetcher === null || currentFetcher === void 0 ? void 0 : currentFetcher.data) || undefined\n    };\n    setFetcher(key, fetcher);\n    update({\n      fetchers: new Map(state.fetchers)\n    });\n    let controller = new AbortController();\n    fetchControllers.set(key, controller);\n    let result = await callLoader(match, createUrl(href), controller.signal);\n    fetchControllers.delete(key);\n\n    if (controller.signal.aborted) {\n      return;\n    }\n\n    if (isRedirectResult(result)) {\n      let locationState = {\n        isRedirect: true,\n        type: \"loader\",\n        setCookie: result.value.setCookie\n      };\n      init.onRedirect(result.value.location, locationState);\n      return;\n    }\n\n    if (maybeBailOnError(match, key, result)) {\n      return;\n    }\n\n    if (await maybeBailOnCatch(match, key, result)) {\n      return;\n    }\n\n    let doneFetcher = {\n      state: \"idle\",\n      type: \"done\",\n      data: result.value,\n      submission: undefined\n    };\n    setFetcher(key, doneFetcher);\n    update({\n      fetchers: new Map(state.fetchers)\n    });\n  }\n\n  async function handleLoaderFetch(href, key, match) {\n    if (typeof AbortController === \"undefined\") {\n      throw new Error(\"handleLoaderFetch was called during the server render, but it shouldn't be. \" + \"You are likely calling useFetcher.load() in the body of your component. \" + \"Try moving it to a useEffect or a callback.\");\n    }\n\n    let currentFetcher = state.fetchers.get(key);\n    let fetcher = {\n      state: \"loading\",\n      type: \"normalLoad\",\n      submission: undefined,\n      data: (currentFetcher === null || currentFetcher === void 0 ? void 0 : currentFetcher.data) || undefined\n    };\n    setFetcher(key, fetcher);\n    update({\n      fetchers: new Map(state.fetchers)\n    });\n    let controller = new AbortController();\n    fetchControllers.set(key, controller);\n    let result = await callLoader(match, createUrl(href), controller.signal);\n    if (controller.signal.aborted) return;\n    fetchControllers.delete(key);\n\n    if (isRedirectResult(result)) {\n      let locationState = {\n        isRedirect: true,\n        type: \"loader\",\n        setCookie: result.value.setCookie\n      };\n      init.onRedirect(result.value.location, locationState);\n      return;\n    }\n\n    if (maybeBailOnError(match, key, result)) {\n      return;\n    }\n\n    if (await maybeBailOnCatch(match, key, result)) {\n      return;\n    }\n\n    let doneFetcher = {\n      state: \"idle\",\n      type: \"done\",\n      data: result.value,\n      submission: undefined\n    };\n    setFetcher(key, doneFetcher);\n    update({\n      fetchers: new Map(state.fetchers)\n    });\n  }\n\n  async function maybeBailOnCatch(match, key, result) {\n    // TODO: revisit this if submission is correct after review\n    if (isCatchResult(result)) {\n      let catchBoundaryId = findNearestCatchBoundary(match, state.matches);\n      state.fetchers.delete(key);\n      update({\n        transition: IDLE_TRANSITION,\n        fetchers: new Map(state.fetchers),\n        catch: {\n          data: result.value.data,\n          status: result.value.status,\n          statusText: result.value.statusText\n        },\n        catchBoundaryId\n      });\n      return true;\n    }\n\n    return false;\n  }\n\n  function maybeBailOnError(match, key, result) {\n    if (isErrorResult(result)) {\n      let errorBoundaryId = findNearestBoundary(match, state.matches);\n      state.fetchers.delete(key);\n      update({\n        fetchers: new Map(state.fetchers),\n        error: result.value,\n        errorBoundaryId\n      });\n      return true;\n    }\n\n    return false;\n  }\n\n  async function handleNotFoundNavigation(location, matches) {\n    abortNormalNavigation();\n    let transition = {\n      state: \"loading\",\n      type: \"normalLoad\",\n      submission: undefined,\n      location\n    };\n    update({\n      transition,\n      nextMatches: matches\n    }); // Force async so UI code doesn't have to special not found route changes not\n    // skipping the pending state (like scroll restoration gets really\n    // complicated without the pending state, maybe we can figure something else\n    // out later, but this works great.)\n\n    await Promise.resolve();\n    let catchBoundaryId = findNearestCatchBoundary(matches[0], matches);\n    update({\n      location,\n      matches,\n      catch: {\n        data: null,\n        status: 404,\n        statusText: \"Not Found\"\n      },\n      catchBoundaryId,\n      transition: IDLE_TRANSITION\n    });\n  }\n\n  async function handleActionSubmissionNavigation(location, submission, matches) {\n    abortNormalNavigation();\n    let transition = {\n      state: \"submitting\",\n      type: \"actionSubmission\",\n      submission,\n      location\n    };\n    update({\n      transition,\n      nextMatches: matches\n    });\n    let controller = new AbortController();\n    pendingNavigationController = controller; // Create a local copy we can mutate for proper determination of the acton\n    // to run on layout/index routes.  We do not want to mutate the eventual\n    // matches used for revalidation\n\n    let actionMatches = matches;\n\n    if (!isIndexRequestUrl(createUrl(submission.action)) && actionMatches[matches.length - 1].route.index) {\n      actionMatches = actionMatches.slice(0, -1);\n    }\n\n    let leafMatch = actionMatches.slice(-1)[0];\n    let result = await callAction(submission, leafMatch, controller.signal);\n\n    if (controller.signal.aborted) {\n      return;\n    }\n\n    if (isRedirectResult(result)) {\n      let locationState = {\n        isRedirect: true,\n        type: \"action\",\n        setCookie: result.value.setCookie\n      };\n      init.onRedirect(result.value.location, locationState);\n      return;\n    }\n\n    let catchVal, catchBoundaryId;\n\n    if (isCatchResult(result)) {\n      [catchVal, catchBoundaryId] = (await findCatchAndBoundaryId([result], actionMatches, result)) || [];\n    }\n\n    let loadTransition = {\n      state: \"loading\",\n      type: \"actionReload\",\n      submission,\n      location\n    };\n    update({\n      transition: loadTransition,\n      actionData: {\n        [leafMatch.route.id]: result.value\n      }\n    });\n    await loadPageData(location, matches, submission, leafMatch.route.id, result, catchVal, catchBoundaryId);\n  }\n\n  async function handleLoaderSubmissionNavigation(location, submission, matches) {\n    abortNormalNavigation();\n    let transition = {\n      state: \"submitting\",\n      type: \"loaderSubmission\",\n      submission,\n      location\n    };\n    update({\n      transition,\n      nextMatches: matches\n    });\n    await loadPageData(location, matches, submission);\n  }\n\n  async function handleHashChange(location, matches) {\n    abortNormalNavigation();\n    let transition = {\n      state: \"loading\",\n      type: \"normalLoad\",\n      submission: undefined,\n      location\n    };\n    update({\n      transition,\n      nextMatches: matches\n    }); // Force async so UI code doesn't have to special case hash changes not\n    // skipping the pending state (like scroll restoration gets really\n    // complicated without the pending state, maybe we can figure something else\n    // out later, but this works great.)\n\n    await Promise.resolve();\n    update({\n      location,\n      matches,\n      transition: IDLE_TRANSITION\n    });\n  }\n\n  async function handleLoad(location, matches) {\n    abortNormalNavigation();\n    let transition = {\n      state: \"loading\",\n      type: \"normalLoad\",\n      submission: undefined,\n      location\n    };\n    update({\n      transition,\n      nextMatches: matches\n    });\n    await loadPageData(location, matches);\n  }\n\n  async function handleLoaderRedirect(location, matches) {\n    abortNormalNavigation();\n    let transition = {\n      state: \"loading\",\n      type: \"normalRedirect\",\n      submission: undefined,\n      location\n    };\n    update({\n      transition,\n      nextMatches: matches\n    });\n    await loadPageData(location, matches);\n  }\n\n  async function handleLoaderSubmissionRedirect(location, matches) {\n    abortNormalNavigation();\n    invariant(state.transition.type === \"loaderSubmission\", `Unexpected transition: ${JSON.stringify(state.transition)}`);\n    let {\n      submission\n    } = state.transition;\n    let transition = {\n      state: \"loading\",\n      type: \"loaderSubmissionRedirect\",\n      submission,\n      location: location\n    };\n    update({\n      transition,\n      nextMatches: matches\n    });\n    await loadPageData(location, matches, submission);\n  }\n\n  async function handleFetchActionRedirect(location, matches) {\n    abortNormalNavigation();\n    let transition = {\n      state: \"loading\",\n      type: \"fetchActionRedirect\",\n      submission: undefined,\n      location\n    };\n    update({\n      transition,\n      nextMatches: matches\n    });\n    await loadPageData(location, matches);\n  }\n\n  async function handleActionRedirect(location, matches) {\n    abortNormalNavigation();\n    invariant(state.transition.type === \"actionSubmission\" || // loader redirected during action reload\n    state.transition.type === \"actionReload\", `Unexpected transition: ${JSON.stringify(state.transition)}`);\n    let {\n      submission\n    } = state.transition;\n    let transition = {\n      state: \"loading\",\n      type: \"actionRedirect\",\n      submission,\n      location\n    };\n    update({\n      transition,\n      nextMatches: matches\n    });\n    await loadPageData(location, matches, submission);\n  }\n\n  function isHashChangeOnly(location) {\n    return createHref(state.location) === createHref(location) && state.location.hash !== location.hash;\n  }\n\n  async function loadPageData(location, matches, submission, submissionRouteId, actionResult, catchVal, catchBoundaryId) {\n    let maybeActionErrorResult = actionResult && isErrorResult(actionResult) ? actionResult : undefined;\n    let maybeActionCatchResult = actionResult && isCatchResult(actionResult) ? actionResult : undefined;\n    let controller = new AbortController();\n    pendingNavigationController = controller;\n    navigationLoadId = ++incrementingLoadId;\n    let results = await callLoaders(state, location, matches, controller.signal, maybeActionErrorResult, maybeActionCatchResult, submission, submissionRouteId, undefined, catchBoundaryId);\n\n    if (controller.signal.aborted) {\n      return;\n    }\n\n    let redirect = findRedirect(results);\n\n    if (redirect) {\n      // loader redirected during an action reload, treat it like an\n      // actionRedirect instead so that all the loaders get called again and the\n      // submission sticks around for optimistic/pending UI.\n      if (state.transition.type === \"actionReload\") {\n        let locationState = {\n          isRedirect: true,\n          type: \"action\",\n          setCookie: redirect.setCookie\n        };\n        init.onRedirect(redirect.location, locationState);\n      } else if (state.transition.type === \"loaderSubmission\") {\n        let locationState = {\n          isRedirect: true,\n          type: \"loaderSubmission\",\n          setCookie: redirect.setCookie\n        };\n        init.onRedirect(redirect.location, locationState);\n      } else {\n        let locationState = {\n          isRedirect: true,\n          type: \"loader\",\n          setCookie: redirect.setCookie\n        };\n        init.onRedirect(redirect.location, locationState);\n      }\n\n      return;\n    }\n\n    let [error, errorBoundaryId] = findErrorAndBoundaryId(results, matches, maybeActionErrorResult);\n    [catchVal, catchBoundaryId] = (await findCatchAndBoundaryId(results, matches, maybeActionErrorResult)) || [catchVal, catchBoundaryId];\n    markFetchRedirectsDone();\n    let abortedIds = abortStaleFetchLoads(navigationLoadId);\n\n    if (abortedIds) {\n      markFetchersDone(abortedIds);\n    }\n\n    update({\n      location,\n      matches,\n      error,\n      errorBoundaryId,\n      catch: catchVal,\n      catchBoundaryId,\n      loaderData: makeLoaderData(state, results, matches),\n      actionData: state.transition.type === \"actionReload\" ? state.actionData : undefined,\n      transition: IDLE_TRANSITION,\n      fetchers: abortedIds ? new Map(state.fetchers) : state.fetchers\n    });\n  }\n\n  function abortNormalNavigation() {\n    if (pendingNavigationController) {\n      pendingNavigationController.abort();\n    }\n  }\n\n  function abortFetcher(key) {\n    let controller = fetchControllers.get(key);\n    invariant(controller, `Expected fetch controller: ${key}`);\n    controller.abort();\n    fetchControllers.delete(key);\n  }\n\n  function markFetchRedirectsDone() {\n    let doneKeys = [];\n\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, `Expected fetcher: ${key}`);\n\n      if (fetcher.type === \"actionRedirect\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n      }\n    }\n\n    markFetchersDone(doneKeys);\n  }\n\n  return {\n    send,\n    getState,\n    getFetcher,\n    deleteFetcher,\n    dispose,\n\n    get _internalFetchControllers() {\n      return fetchControllers;\n    }\n\n  };\n} //#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createTransitionManager sub-functions\n////////////////////////////////////////////////////////////////////////////////\n\nasync function callLoaders(state, location, matches, signal, actionErrorResult, actionCatchResult, submission, submissionRouteId, fetcher, catchBoundaryId) {\n  let url = createUrl(createHref(location));\n  let matchesToLoad = filterMatchesToLoad(state, location, matches, actionErrorResult, actionCatchResult, submission, submissionRouteId, fetcher, catchBoundaryId);\n  return Promise.all(matchesToLoad.map(match => callLoader(match, url, signal)));\n}\n\nasync function callLoader(match, url, signal) {\n  invariant(match.route.loader, `Expected loader for ${match.route.id}`);\n\n  try {\n    let {\n      params\n    } = match;\n    let value = await match.route.loader({\n      params,\n      url,\n      signal\n    });\n    return {\n      match,\n      value\n    };\n  } catch (error) {\n    return {\n      match,\n      value: error\n    };\n  }\n}\n\nasync function callAction(submission, match, signal) {\n  try {\n    let value = await match.route.action({\n      url: createUrl(submission.action),\n      params: match.params,\n      submission,\n      signal\n    });\n    return {\n      match,\n      value\n    };\n  } catch (error) {\n    return {\n      match,\n      value: error\n    };\n  }\n}\n\nfunction filterMatchesToLoad(state, location, matches, actionErrorResult, actionCatchResult, submission, submissionRouteId, fetcher, catchBoundaryId) {\n  var _location$state;\n\n  // Filter out all routes below the problematic route as they aren't going\n  // to render so we don't need to load them.\n  if (catchBoundaryId || submissionRouteId && (actionCatchResult || actionErrorResult)) {\n    let foundProblematicRoute = false;\n    matches = matches.filter(match => {\n      if (foundProblematicRoute) {\n        return false;\n      }\n\n      if (match.route.id === submissionRouteId || match.route.id === catchBoundaryId) {\n        foundProblematicRoute = true;\n        return false;\n      }\n\n      return true;\n    });\n  }\n\n  let isNew = (match, index) => {\n    // [a] -> [a, b]\n    if (!state.matches[index]) return true; // [a, b] -> [a, c]\n\n    return match.route.id !== state.matches[index].route.id;\n  };\n\n  let matchPathChanged = (match, index) => {\n    var _state$matches$index$;\n\n    return (// param change, /users/123 -> /users/456\n      state.matches[index].pathname !== match.pathname || // splat param changed, which is not present in match.path\n      // e.g. /files/images/avatar.jpg -> files/finances.xls\n      ((_state$matches$index$ = state.matches[index].route.path) === null || _state$matches$index$ === void 0 ? void 0 : _state$matches$index$.endsWith(\"*\")) && state.matches[index].params[\"*\"] !== match.params[\"*\"]\n    );\n  };\n\n  let url = createUrl(createHref(location));\n\n  let filterByRouteProps = (match, index) => {\n    if (!match.route.loader) {\n      return false;\n    }\n\n    if (isNew(match, index) || matchPathChanged(match, index)) {\n      return true;\n    }\n\n    if (match.route.shouldReload) {\n      let prevUrl = createUrl(createHref(state.location));\n      return match.route.shouldReload({\n        prevUrl,\n        url,\n        submission,\n        params: match.params\n      });\n    }\n\n    return true;\n  };\n\n  let isInRootCatchBoundary = state.matches.length === 1;\n\n  if (isInRootCatchBoundary) {\n    return matches.filter(match => !!match.route.loader);\n  }\n\n  if ((fetcher === null || fetcher === void 0 ? void 0 : fetcher.type) === \"actionReload\") {\n    return matches.filter(filterByRouteProps);\n  } else if ( // mutation, reload for fresh data\n  state.transition.type === \"actionReload\" || state.transition.type === \"actionRedirect\" || state.transition.type === \"fetchActionRedirect\" || // clicked the same link, resubmitted a GET form\n  createHref(url) === createHref(state.location) || // search affects all loaders\n  url.searchParams.toString() !== state.location.search.substring(1) || // a cookie was set\n  (_location$state = location.state) !== null && _location$state !== void 0 && _location$state.setCookie) {\n    return matches.filter(filterByRouteProps);\n  }\n\n  return matches.filter((match, index, arr) => {\n    var _location$state2;\n\n    // don't load errored action route\n    if ((actionErrorResult || actionCatchResult) && arr.length - 1 === index) {\n      return false;\n    }\n\n    return match.route.loader && (isNew(match, index) || matchPathChanged(match, index) || ((_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.setCookie));\n  });\n}\n\nfunction isRedirectResult(result) {\n  return result.value instanceof TransitionRedirect;\n}\n\nfunction createHref(location) {\n  return location.pathname + location.search;\n}\n\nfunction findRedirect(results) {\n  for (let result of results) {\n    if (isRedirectResult(result)) {\n      return result.value;\n    }\n  }\n\n  return null;\n}\n\nasync function findCatchAndBoundaryId(results, matches, actionCatchResult) {\n  let loaderCatchResult;\n\n  for (let result of results) {\n    if (isCatchResult(result)) {\n      loaderCatchResult = result;\n      break;\n    }\n  }\n\n  let extractCatchData = async res => ({\n    status: res.status,\n    statusText: res.statusText,\n    data: res.data\n  }); // Weird case where action threw, and then a parent loader ALSO threw, we\n  // use the action catch but the loader's nearest boundary (cause we can't\n  // render down to the boundary the action would prefer)\n\n\n  if (actionCatchResult && loaderCatchResult) {\n    let boundaryId = findNearestCatchBoundary(loaderCatchResult.match, matches);\n    return [await extractCatchData(actionCatchResult.value), boundaryId];\n  }\n\n  if (loaderCatchResult) {\n    let boundaryId = findNearestCatchBoundary(loaderCatchResult.match, matches);\n    return [await extractCatchData(loaderCatchResult.value), boundaryId];\n  }\n\n  return null;\n}\n\nfunction findErrorAndBoundaryId(results, matches, actionErrorResult) {\n  let loaderErrorResult;\n\n  for (let result of results) {\n    if (isErrorResult(result)) {\n      loaderErrorResult = result;\n      break;\n    }\n  } // Weird case where action errored, and then a parent loader ALSO errored, we\n  // use the action error but the loader's nearest boundary (cause we can't\n  // render down to the boundary the action would prefer)\n\n\n  if (actionErrorResult && loaderErrorResult) {\n    let boundaryId = findNearestBoundary(loaderErrorResult.match, matches);\n    return [actionErrorResult.value, boundaryId];\n  }\n\n  if (actionErrorResult) {\n    let boundaryId = findNearestBoundary(actionErrorResult.match, matches);\n    return [actionErrorResult.value, boundaryId];\n  }\n\n  if (loaderErrorResult) {\n    let boundaryId = findNearestBoundary(loaderErrorResult.match, matches);\n    return [loaderErrorResult.value, boundaryId];\n  }\n\n  return [undefined, undefined];\n}\n\nfunction findNearestCatchBoundary(matchWithError, matches) {\n  let nearestBoundaryId = null;\n\n  for (let match of matches) {\n    if (match.route.CatchBoundary) {\n      nearestBoundaryId = match.route.id;\n    } // only search parents (stop at throwing match)\n\n\n    if (match === matchWithError) {\n      break;\n    }\n  }\n\n  return nearestBoundaryId;\n}\n\nfunction findNearestBoundary(matchWithError, matches) {\n  let nearestBoundaryId = null;\n\n  for (let match of matches) {\n    if (match.route.ErrorBoundary) {\n      nearestBoundaryId = match.route.id;\n    } // only search parents (stop at throwing match)\n\n\n    if (match === matchWithError) {\n      break;\n    }\n  }\n\n  return nearestBoundaryId;\n}\n\nfunction makeLoaderData(state, results, matches) {\n  let newData = {};\n\n  for (let {\n    match,\n    value\n  } of results) {\n    newData[match.route.id] = value;\n  }\n\n  let loaderData = {};\n\n  for (let {\n    route\n  } of matches) {\n    let value = newData[route.id] !== undefined ? newData[route.id] : state.loaderData[route.id];\n\n    if (value !== undefined) {\n      loaderData[route.id] = value;\n    }\n  }\n\n  return loaderData;\n}\n\nfunction isCatchResult(result) {\n  return result.value instanceof CatchValue;\n}\n\nfunction isErrorResult(result) {\n  return result.value instanceof Error;\n}\n\nfunction createUrl(href) {\n  return new URL(href, window.location.origin);\n} //#endregion\n\nexport { CatchValue, IDLE_FETCHER, IDLE_TRANSITION, TransitionRedirect, createTransitionManager };\n", "/**\n * @remix-run/react v1.5.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport { matchRoutes } from 'react-router-dom';\n\n// TODO: We eventually might not want to import anything directly from `history`\nfunction matchClientRoutes(routes, location) {\n  let matches = matchRoutes(routes, location);\n  if (!matches) return null;\n  return matches.map(match => ({\n    params: match.params,\n    pathname: match.pathname,\n    route: match.route\n  }));\n}\n\nexport { matchClientRoutes };\n", "/**\n * @remix-run/react v1.5.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nexport { RemixBrowser } from './browser.js';\nexport { Outlet, useHref, useLocation, useNavigate, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useSearchParams } from 'react-router-dom';\nexport { Form, Link, Links, LiveReload, Meta, NavLink, PrefetchPageLinks, Scripts, useActionData, useBeforeUnload, useFetcher, useFetchers, useFormAction, useLoaderData, useMatches, useSubmit, useTransition } from './components.js';\nexport { useCatch } from './errorBoundaries.js';\nexport { ScrollRestoration } from './scroll-restoration.js';\nexport { RemixServer } from './server.js';\n", "/**\n * @remix-run/react v1.5.1\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useBeforeUnload, useTransition } from './components.js';\n\nlet STORAGE_KEY = \"positions\";\nlet positions = {};\n\nif (typeof document !== \"undefined\") {\n  let sessionPositions = sessionStorage.getItem(STORAGE_KEY);\n\n  if (sessionPositions) {\n    positions = JSON.parse(sessionPositions);\n  }\n}\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n *\n * @see https://remix.run/api/remix#scrollrestoration\n */\n\n\nfunction ScrollRestoration({\n  nonce = undefined\n}) {\n  useScrollRestoration(); // wait for the browser to restore it on its own\n\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n  }, []); // let the browser restore on it's own for refresh\n\n  useBeforeUnload(React.useCallback(() => {\n    window.history.scrollRestoration = \"auto\";\n  }, []));\n\n  let restoreScroll = (STORAGE_KEY => {\n    if (!window.history.state || !window.history.state.key) {\n      let key = Math.random().toString(32).slice(2);\n      window.history.replaceState({\n        key\n      }, \"\");\n    }\n\n    try {\n      let positions = JSON.parse(sessionStorage.getItem(STORAGE_KEY) || \"{}\");\n      let storedY = positions[window.history.state.key];\n\n      if (typeof storedY === \"number\") {\n        window.scrollTo(0, storedY);\n      }\n    } catch (error) {\n      console.error(error);\n      sessionStorage.removeItem(STORAGE_KEY);\n    }\n  }).toString();\n\n  return /*#__PURE__*/React.createElement(\"script\", {\n    nonce: nonce,\n    suppressHydrationWarning: true,\n    dangerouslySetInnerHTML: {\n      __html: `(${restoreScroll})(${JSON.stringify(STORAGE_KEY)})`\n    }\n  });\n}\nlet hydrated = false;\n\nfunction useScrollRestoration() {\n  let location = useLocation();\n  let transition = useTransition();\n  let wasSubmissionRef = React.useRef(false);\n  React.useEffect(() => {\n    if (transition.submission) {\n      wasSubmissionRef.current = true;\n    }\n  }, [transition]);\n  React.useEffect(() => {\n    if (transition.location) {\n      positions[location.key] = window.scrollY;\n    }\n  }, [transition, location]);\n  useBeforeUnload(React.useCallback(() => {\n    sessionStorage.setItem(STORAGE_KEY, JSON.stringify(positions));\n  }, []));\n\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line\n    React.useLayoutEffect(() => {\n      // don't do anything on hydration, the component already did this with an\n      // inline script.\n      if (!hydrated) {\n        hydrated = true;\n        return;\n      }\n\n      let y = positions[location.key]; // been here before, scroll to it\n\n      if (y != undefined) {\n        window.scrollTo(0, y);\n        return;\n      } // try to scroll to the hash\n\n\n      if (location.hash) {\n        let el = document.getElementById(location.hash.slice(1));\n\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      } // don't do anything on submissions\n\n\n      if (wasSubmissionRef.current === true) {\n        wasSubmissionRef.current = false;\n        return;\n      } // otherwise go to the top on new locations\n\n\n      window.scrollTo(0, 0);\n    }, [location]);\n  }\n\n  React.useEffect(() => {\n    if (transition.submission) {\n      wasSubmissionRef.current = true;\n    }\n  }, [transition]);\n}\n\nexport { ScrollRestoration };\n"],
  "mappings": "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",
  "names": []
}
